{"ast":null,"code":"import _slicedToArray from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createForOfIteratorHelper from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import Data from'../data.js';import updateCollectedData from'./updateCollectedData.js';import{store}from'../../store/store.js';import{newHistoryState}from'../../store/reducers/historySlice.js';function recordChange(dataBeforeChange,dataAfterChange){var history=store.getState().history;var prevRecordedData=updatePrevRecordedData(history.changeHistory[history.changeHistoryIndex],dataBeforeChange);var updatedCollectedData=updateCollectedData(dataAfterChange,history.collectedData);store.dispatch(newHistoryState({prevRecordedData:prevRecordedData,dataAfterChange:dataAfterChange,collectedData:updatedCollectedData}));}function updatePrevRecordedData(prevData,dataBeforeChange){var updatedPrevData=new Data();var _iterator=_createForOfIteratorHelper(dataBeforeChange.getIndividualEntries()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),entryKey=_step$value[0],data=_step$value[1];var styleMap=new Map();if(prevData.hasIndividualEntry(entryKey)){styleMap=prevData.getIndividualEntry(entryKey).getStyleMap();}var _iterator5=_createForOfIteratorHelper(data.getStyleMap().entries()),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _step5$value=_slicedToArray(_step5.value,2),property=_step5$value[0],val=_step5$value[1];styleMap.set(property,val);}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}var args=[entryKey,styleMap];if(entryKey!='table'&&!/\\.col\\d+/.test(entryKey))args.push(data.getRow());if(/\\.col\\d+/.test(entryKey)){args.push(data.getCellRow(),data.getCellCol());if(prevData.hasIndividualEntry(entryKey))args.push(prevData.getIndividualEntry(entryKey).getVal());else args.push(data.getVal());}updatedPrevData.setIndividualEntry.apply(updatedPrevData,args);}}catch(err){_iterator.e(err);}finally{_iterator.f();}var _iterator2=_createForOfIteratorHelper(prevData.getIndividualEntries()),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _step2$value=_slicedToArray(_step2.value,2),_entryKey=_step2$value[0],_data=_step2$value[1];var _args=[_entryKey,_data.getStyleMap()];if(_entryKey!='table'&&!/\\.col\\d+/.test(_entryKey))_args.push(_data.getRow());if(/\\.col\\d+/.test(_entryKey))_args.push(_data.getCellRow(),_data.getCellCol(),_data.getVal());if(!updatedPrevData.hasIndividualEntry(_entryKey))updatedPrevData.setIndividualEntry.apply(updatedPrevData,_args);}// group entries\n}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var _iterator3=_createForOfIteratorHelper(dataBeforeChange.getGroupEntries()),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _step3$value=_slicedToArray(_step3.value,2),group=_step3$value[0],_styleMap=_step3$value[1];var updatedStyleMap=new Map();if(prevData.hasGroup(group)){updatedStyleMap=prevData.getGroup(group);}var _iterator6=_createForOfIteratorHelper(_styleMap.entries()),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var _step6$value=_slicedToArray(_step6.value,2),_property=_step6$value[0],_val=_step6$value[1];updatedStyleMap.set(_property,_val);}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}updatedPrevData.setGroup(group,updatedStyleMap);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}var _iterator4=_createForOfIteratorHelper(prevData.getGroupEntries()),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _step4$value=_slicedToArray(_step4.value,2),_group=_step4$value[0],_styleMap2=_step4$value[1];if(!updatedPrevData.hasGroup(_group))updatedPrevData.setGroup(_group,_styleMap2);}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}return updatedPrevData;}export default recordChange;","map":{"version":3,"names":["Data","updateCollectedData","store","newHistoryState","recordChange","dataBeforeChange","dataAfterChange","history","getState","prevRecordedData","updatePrevRecordedData","changeHistory","changeHistoryIndex","updatedCollectedData","collectedData","dispatch","prevData","updatedPrevData","getIndividualEntries","entryKey","data","styleMap","Map","hasIndividualEntry","getIndividualEntry","getStyleMap","entries","property","val","set","args","test","push","getRow","getCellRow","getCellCol","getVal","setIndividualEntry","getGroupEntries","group","updatedStyleMap","hasGroup","getGroup","setGroup"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/data/modifiers/recordChange.js"],"sourcesContent":["import Data from '../data.js';\r\nimport updateCollectedData from './updateCollectedData.js';\r\nimport {store} from '../../store/store.js'\r\nimport {newHistoryState} from '../../store/reducers/historySlice.js'\r\n\r\nfunction recordChange(dataBeforeChange, dataAfterChange) {\r\n    let history = store.getState().history;\r\n    let prevRecordedData = updatePrevRecordedData(history.changeHistory[history.changeHistoryIndex], dataBeforeChange);\r\n    let updatedCollectedData = updateCollectedData(dataAfterChange, history.collectedData);\r\n    store.dispatch(newHistoryState({prevRecordedData, dataAfterChange, collectedData: updatedCollectedData}));\r\n}\r\nfunction updatePrevRecordedData(prevData, dataBeforeChange) {\r\n    let updatedPrevData = new Data();\r\n    for (const [entryKey, data] of dataBeforeChange.getIndividualEntries()) {\r\n        let styleMap = new Map();\r\n        if (prevData.hasIndividualEntry(entryKey)) {\r\n            styleMap = prevData.getIndividualEntry(entryKey).getStyleMap();\r\n        }\r\n        for (const [property, val] of data.getStyleMap().entries()) styleMap.set(property, val);\r\n        let args = [entryKey, styleMap];\r\n        if (entryKey != 'table' && !/\\.col\\d+/.test(entryKey)) args.push(data.getRow());\r\n        if (/\\.col\\d+/.test(entryKey)) {\r\n            args.push(data.getCellRow(), data.getCellCol());\r\n            if (prevData.hasIndividualEntry(entryKey)) args.push(prevData.getIndividualEntry(entryKey).getVal());\r\n            else args.push(data.getVal());\r\n        }\r\n        updatedPrevData.setIndividualEntry(...args);\r\n    }\r\n    for (const [entryKey, data] of prevData.getIndividualEntries()) {\r\n        let args = [entryKey, data.getStyleMap()];\r\n        if (entryKey != 'table' && !/\\.col\\d+/.test(entryKey)) args.push(data.getRow());\r\n        if (/\\.col\\d+/.test(entryKey)) args.push(data.getCellRow(), data.getCellCol(), data.getVal());\r\n        if (!updatedPrevData.hasIndividualEntry(entryKey)) updatedPrevData.setIndividualEntry(...args);\r\n    }\r\n    // group entries\r\n    for (const [group, styleMap] of dataBeforeChange.getGroupEntries()) {\r\n        let updatedStyleMap = new Map();\r\n        if (prevData.hasGroup(group)) {\r\n            updatedStyleMap = prevData.getGroup(group);\r\n        }\r\n        for (const [property, val] of styleMap.entries()) updatedStyleMap.set(property, val);\r\n        updatedPrevData.setGroup(group, updatedStyleMap);\r\n    }\r\n    for (const [group, styleMap] of prevData.getGroupEntries()) {\r\n        if (!updatedPrevData.hasGroup(group)) updatedPrevData.setGroup(group, styleMap);\r\n    }\r\n    return updatedPrevData;\r\n}\r\n\r\nexport default recordChange;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}