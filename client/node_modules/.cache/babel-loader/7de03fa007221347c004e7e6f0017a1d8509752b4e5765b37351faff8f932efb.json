{"ast":null,"code":"import _slicedToArray from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{useSelector}from'react-redux';import{getSelectionEntries}from'../../store/reducers/selectionSlice.js';import'./CellViewPanel.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CellViewPanel(){var selectionEntries=useSelector(getSelectionEntries);return/*#__PURE__*/_jsxs(\"div\",{id:\"cellViewPanel\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:'70px',display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"p\",{id:\"cellViewPanel__cellAddress\",children:getAddress(selectionEntries)}),/*#__PURE__*/_jsx(\"p\",{id:\"cellViewPanel__divider\"})]}),/*#__PURE__*/_jsx(\"p\",{id:\"cellViewPanel__cellTextValue\"})]});}function getAddress(selectedEntries){var cell=selectedEntries.values().next().value;var _cell$split=cell.split(','),_cell$split2=_slicedToArray(_cell$split,2),rowNum=_cell$split2[0],colNum=_cell$split2[1];var letter=String.fromCharCode(parseInt(colNum,10)%26+64);return letter+rowNum;}export default CellViewPanel;","map":{"version":3,"names":["React","useEffect","useState","useSelector","getSelectionEntries","CellViewPanel","selectionEntries","width","display","justifyContent","alignItems","getAddress","selectedEntries","cell","values","next","value","split","rowNum","colNum","letter","String","fromCharCode","parseInt"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/CellViewPanel/CellViewPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { getSelectionEntries } from '../../store/reducers/selectionSlice.js';\r\nimport './CellViewPanel.css'\r\n\r\nfunction CellViewPanel() {\r\n    const selectionEntries = useSelector(getSelectionEntries);\r\n\r\n    return (\r\n        <div id='cellViewPanel'>\r\n            <div style={{ width: '70px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <p id='cellViewPanel__cellAddress'>{getAddress(selectionEntries)}</p>\r\n                <p id='cellViewPanel__divider'></p>\r\n            </div>\r\n            <p id='cellViewPanel__cellTextValue'></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getAddress(selectedEntries) {\r\n    let cell = selectedEntries.values().next().value;\r\n    let [rowNum, colNum] = cell.split(',');\r\n    let letter = String.fromCharCode(parseInt(colNum, 10) % 26 + 64);\r\n    return letter + rowNum;\r\n}\r\n\r\nexport default CellViewPanel;"],"mappings":"oIAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,mBAAmB,KAAQ,wCAAwC,CAC5E,MAAO,qBAAqB,yFAE5B,QAASC,cAAa,EAAG,CACrB,GAAMC,iBAAgB,CAAGH,WAAW,CAACC,mBAAmB,CAAC,CAEzD,mBACI,aAAK,EAAE,CAAC,eAAe,wBACnB,aAAK,KAAK,CAAE,CAAEG,KAAK,CAAE,MAAM,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEC,UAAU,CAAE,QAAS,CAAE,wBAClG,UAAG,EAAE,CAAC,4BAA4B,UAAEC,UAAU,CAACL,gBAAgB,CAAC,EAAK,cACrE,UAAG,EAAE,CAAC,wBAAwB,EAAK,GACjC,cACN,UAAG,EAAE,CAAC,8BAA8B,EAAK,GACvC,CAEd,CAEA,QAASK,WAAU,CAACC,eAAe,CAAE,CACjC,GAAIC,KAAI,CAAGD,eAAe,CAACE,MAAM,EAAE,CAACC,IAAI,EAAE,CAACC,KAAK,CAChD,gBAAuBH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC,4CAAjCC,MAAM,iBAAEC,MAAM,iBACnB,GAAIC,OAAM,CAAGC,MAAM,CAACC,YAAY,CAACC,QAAQ,CAACJ,MAAM,CAAE,EAAE,CAAC,CAAG,EAAE,CAAG,EAAE,CAAC,CAChE,MAAOC,OAAM,CAAGF,MAAM,CAC1B,CAEA,cAAeb,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}