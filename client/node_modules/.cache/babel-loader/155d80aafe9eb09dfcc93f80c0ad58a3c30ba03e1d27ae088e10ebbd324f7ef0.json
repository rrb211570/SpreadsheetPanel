{"ast":null,"code":"import _slicedToArray from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{compareDOM,compareStore,logError,logSuccess}from'../../../../tests/helper.js';import{getInLine,nextTurn}from'../../../../tests/sequenceHelpers.js';import{store}from'./../../../../store/store.js';import{updateFontFamily}from'./FontFamily.js';var WAIT_IN_QUEUE=-1;var ARRANGE=0;var ACTION_SELECT_CELL=1;var ACTION_CHANGE_FONT_FAMILY=2;var ASSERT=3;function fontFamilyTest(turn){var changes=[[4,5,'Times New Roman'],[1,2,'Ebrima'],[3,7,'Century Gothic'],[8,2,'Times New Roman'],[2,4,'Times New Roman']];if(changes.length>0)checkReactionOfFontFamily(1,changes[0],turn,true,changes.length);for(var i=1;i<changes.length;++i)checkReactionOfFontFamily(i+1,changes[i],turn,false,changes.length);}function checkReactionOfFontFamily(testCaseIndex,testDetails,turn,isFirstCall,totalTestCases){var _testDetails=_slicedToArray(testDetails,3),selectedRowNum=_testDetails[0],selectedColNum=_testDetails[1],newFontFamily=_testDetails[2];var cellValue=document.querySelector(\".row\".concat(selectedRowNum,\".col\").concat(selectedColNum,\">.cellValueDiv>.cellValue\"));var myTurnNumber=getInLine(turn);var stage=WAIT_IN_QUEUE;var prevFontFamily;var prevState;var prevHistoryIndex;var timer=setInterval(function(){try{switch(stage){case WAIT_IN_QUEUE:if(turn.current==myTurnNumber){if(isFirstCall)console.log('\\n--------FONT FAMILY TEST--------------------');stage=ARRANGE;}break;case ARRANGE:var history=store.getState().history;// arrange\nprevFontFamily=cellValue.style.fontFamily;prevState=history.changeHistory[history.changeHistoryIndex];prevHistoryIndex=history.changeHistoryIndex;case ACTION_SELECT_CELL:// select cell\nvar cell=document.querySelector(\".row\".concat(selectedRowNum,\".col\").concat(selectedColNum,\" .coverDiv\"));cell.dispatchEvent(new MouseEvent('mousedown',{bubbles:true,cancelable:true,clientX:0}));stage=ACTION_CHANGE_FONT_FAMILY;break;case ACTION_CHANGE_FONT_FAMILY:// trigger click event on fontFamilyBtn\nvar selectionEntries=store.getState().selection.entries;updateFontFamily(selectionEntries,prevFontFamily,newFontFamily);stage=ASSERT;break;case ASSERT:var prevPropertyObj={fontFamily:prevFontFamily};var propertyObj={fontFamily:newFontFamily};compareDOM(selectedRowNum,selectedColNum,propertyObj);compareStore(selectedRowNum,selectedColNum,prevPropertyObj,propertyObj,prevState,prevHistoryIndex);console.log('fontFamily affects store and DOM correctly');if(testCaseIndex==totalTestCases)logSuccess('fontFamilyTest()',totalTestCases);nextTurn(turn);clearInterval(timer);break;}}catch(e){var errMsg='Err: checkReactionOfFontFamily(): { testCaseIndex: '+testCaseIndex+', rowNum: '+selectedRowNum+', colNum: '+selectedColNum+', newFontFamily: '+newFontFamily+' } :\\n'+e;console.log(errMsg);logError(errMsg);clearInterval(timer);}},200);}export{fontFamilyTest,checkReactionOfFontFamily};","map":{"version":3,"names":["compareDOM","compareStore","logError","logSuccess","getInLine","nextTurn","store","updateFontFamily","WAIT_IN_QUEUE","ARRANGE","ACTION_SELECT_CELL","ACTION_CHANGE_FONT_FAMILY","ASSERT","fontFamilyTest","turn","changes","length","checkReactionOfFontFamily","i","testCaseIndex","testDetails","isFirstCall","totalTestCases","selectedRowNum","selectedColNum","newFontFamily","cellValue","document","querySelector","myTurnNumber","stage","prevFontFamily","prevState","prevHistoryIndex","timer","setInterval","current","console","log","history","getState","style","fontFamily","changeHistory","changeHistoryIndex","cell","dispatchEvent","MouseEvent","bubbles","cancelable","clientX","selectionEntries","selection","entries","prevPropertyObj","propertyObj","clearInterval","e","errMsg"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/FormatPanel/components/FontFamily/test.js"],"sourcesContent":["import { compareDOM, compareStore, logError, logSuccess } from '../../../../tests/helper.js';\r\nimport { getInLine, nextTurn } from '../../../../tests/sequenceHelpers.js'\r\nimport { store } from './../../../../store/store.js'\r\nimport { updateFontFamily } from './FontFamily.js';\r\n\r\nconst WAIT_IN_QUEUE = -1;\r\nconst ARRANGE = 0;\r\nconst ACTION_SELECT_CELL = 1\r\nconst ACTION_CHANGE_FONT_FAMILY = 2;\r\nconst ASSERT = 3;\r\n\r\nfunction fontFamilyTest(turn) {\r\n    let changes = [[4, 5, 'Times New Roman'], [1, 2, 'Ebrima'], [3, 7, 'Century Gothic'], [8, 2, 'Times New Roman'], [2, 4, 'Times New Roman']];\r\n    if (changes.length > 0) checkReactionOfFontFamily(1, changes[0], turn, true, changes.length);\r\n    for (let i = 1; i < changes.length; ++i) checkReactionOfFontFamily(i + 1, changes[i], turn, false, changes.length);\r\n}\r\n\r\nfunction checkReactionOfFontFamily(testCaseIndex, testDetails, turn, isFirstCall, totalTestCases) {\r\n    let [selectedRowNum, selectedColNum, newFontFamily] = testDetails;\r\n    let cellValue = document.querySelector(`.row${selectedRowNum}.col${selectedColNum}>.cellValueDiv>.cellValue`);\r\n    let myTurnNumber = getInLine(turn);\r\n    let stage = WAIT_IN_QUEUE;\r\n    let prevFontFamily;\r\n    let prevState;\r\n    let prevHistoryIndex;\r\n    let timer = setInterval(() => {\r\n        try {\r\n            switch (stage) {\r\n                case WAIT_IN_QUEUE:\r\n                    if (turn.current == myTurnNumber) {\r\n                        if (isFirstCall) console.log('\\n--------FONT FAMILY TEST--------------------');\r\n                        stage = ARRANGE;\r\n                    }\r\n                    break;\r\n                case ARRANGE:\r\n                    let history = store.getState().history;\r\n                    // arrange\r\n                    prevFontFamily = cellValue.style.fontFamily;\r\n                    prevState = history.changeHistory[history.changeHistoryIndex];\r\n                    prevHistoryIndex = history.changeHistoryIndex;\r\n                case ACTION_SELECT_CELL:\r\n                    // select cell\r\n                    let cell = document.querySelector(`.row${selectedRowNum}.col${selectedColNum} .coverDiv`);\r\n                    cell.dispatchEvent(new MouseEvent('mousedown', { bubbles: true, cancelable: true, clientX: 0 }));\r\n                    stage = ACTION_CHANGE_FONT_FAMILY;\r\n                    break;\r\n                case ACTION_CHANGE_FONT_FAMILY:\r\n                    // trigger click event on fontFamilyBtn\r\n                    let selectionEntries = store.getState().selection.entries;\r\n                    updateFontFamily(selectionEntries, prevFontFamily, newFontFamily);\r\n                    stage = ASSERT;\r\n                    break;\r\n                case ASSERT:\r\n                    let prevPropertyObj = { fontFamily: prevFontFamily };\r\n                    let propertyObj = { fontFamily: newFontFamily };\r\n                    compareDOM(selectedRowNum, selectedColNum, propertyObj);\r\n                    compareStore(selectedRowNum, selectedColNum, prevPropertyObj, propertyObj, prevState, prevHistoryIndex);\r\n                    console.log('fontFamily affects store and DOM correctly');\r\n                    if (testCaseIndex == totalTestCases) logSuccess('fontFamilyTest()', totalTestCases);\r\n                    nextTurn(turn);\r\n                    clearInterval(timer);\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            let errMsg = 'Err: checkReactionOfFontFamily(): { testCaseIndex: ' + testCaseIndex + ', rowNum: ' + selectedRowNum + ', colNum: ' + selectedColNum + ', newFontFamily: ' + newFontFamily + ' } :\\n' + e;\r\n            console.log(errMsg);\r\n            logError(errMsg);\r\n            clearInterval(timer);\r\n        }\r\n    }, 200);\r\n}\r\n\r\nexport { fontFamilyTest, checkReactionOfFontFamily };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}