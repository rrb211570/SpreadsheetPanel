{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rband\\\\Desktop\\\\SpreadsheetPanel\\\\client\\\\src\\\\components\\\\FormatPanel\\\\components\\\\FontColor\\\\FontColor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { store } from '../../../../store/store.js';\nimport { useSelector } from 'react-redux';\nimport { getFontColor, setFontColor } from '../../../../store/reducers/selectionSlice.js';\nimport Data from \"../../../../data/data.js\";\nimport recordChange from \"../../../../data/modifiers/recordChange.js\";\nimport './FontColor.css';\nimport { hexToRgb } from \"../../helper.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FontColor(_ref) {\n  _s();\n  let {\n    selectionEntries,\n    colors\n  } = _ref;\n  const color = useSelector(getFontColor);\n  const [insideDropdown, setInsideDropdown] = useState(false);\n  let toggleColorGrid = e => {\n    let colorGrid = e.target.parentElement.querySelector('.fontColor__colorGrid');\n    if (colorGrid.style.opacity == 1) {\n      colorGrid.style.opacity = 0;\n      colorGrid.style.zIndex = -1;\n      colorGrid.style.pointerEvents = 'none';\n    } else {\n      colorGrid.style.opacity = 1;\n      colorGrid.style.zIndex = 3;\n      colorGrid.style.pointerEvents = 'auto';\n    }\n  };\n  let createColorGrid = colors => {\n    let colorGrid = [];\n    let index1 = 0;\n    for (const colorSet of colors) {\n      let colorSetArr = [];\n      let index2 = 0;\n      for (const colorOption of colorSet) {\n        colorSetArr.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fontColor__colorSquareBtn\",\n          style: {},\n          onClick: () => updateFontColor(selectionEntries, color, colorOption),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '100%',\n              display: 'grid',\n              placeItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '15px',\n                height: '15px',\n                backgroundColor: colorOption,\n                border: colorOption == 'white' || index2 == 4 ? '1px solid lightgray' : 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, index2++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this));\n      }\n      colorGrid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: colorSetArr\n      }, index1++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 28\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: colorGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  };\n  let recordMouseEnter = () => {\n    setInsideDropdown(true);\n  };\n  let recordMouseLeave = () => {\n    setInsideDropdown(false);\n  };\n  let hideColorGrid = e => {\n    if (!insideDropdown) {\n      e.currentTarget.querySelector('.fontColor__colorGrid').style.opacity = 0;\n      e.currentTarget.querySelector('.fontColor__colorGrid').style.zIndex = -1;\n      e.currentTarget.querySelector('.fontColor__colorGrid').style.pointerEvents = 'none';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fontColor\",\n    tabIndex: \"-1\",\n    onMouseEnter: recordMouseEnter,\n    onMouseLeave: recordMouseLeave,\n    onBlur: hideColorGrid,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fontColor__btn\",\n      onClick: toggleColorGrid,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fontColor__btnDiv\",\n        style: {\n          height: '100%',\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            height: '19px',\n            margin: '0 0 4px 0',\n            fontSize: '1rem'\n          },\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fontColor__colorBar\",\n          style: {\n            position: 'absolute',\n            bottom: '0px',\n            backgroundColor: color,\n            boxShadow: color == 'white' ? 'inset 0 0 0 1px gray' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fontColor__colorGrid\",\n      children: createColorGrid(colors)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(FontColor, \"gjH9WhfxdtbPyFV3Mk3b6J6HP1I=\", false, function () {\n  return [useSelector];\n});\n_c = FontColor;\nlet updateFontColor = (selectionEntries, prevColor, newColor) => {\n  newColor = hexToRgb(newColor);\n  let prevData = new Data();\n  let newData = new Data();\n  for (const cell of selectionEntries.values()) {\n    let [rowNum, colNum] = cell.split(',').map(num => parseInt(num, 10));\n    prevData.setIndividualEntry('.row' + rowNum + '.col' + colNum, new Map([['fontColor', prevColor]]), rowNum, colNum, null);\n    newData.setIndividualEntry('.row' + rowNum + '.col' + colNum, new Map([['fontColor', newColor]]), rowNum, colNum, null);\n    document.querySelector(`.row${rowNum}.col${colNum}>.cellValueDiv>.cellValue`).style.color = newColor;\n  }\n  recordChange(prevData, newData);\n  store.dispatch(setFontColor({\n    fontColor: newColor\n  }));\n};\nexport { FontColor, updateFontColor };\nvar _c;\n$RefreshReg$(_c, \"FontColor\");","map":{"version":3,"names":["React","useState","store","useSelector","getFontColor","setFontColor","Data","recordChange","hexToRgb","FontColor","selectionEntries","colors","color","insideDropdown","setInsideDropdown","toggleColorGrid","e","colorGrid","target","parentElement","querySelector","style","opacity","zIndex","pointerEvents","createColorGrid","index1","colorSet","colorSetArr","index2","colorOption","push","updateFontColor","width","height","display","placeItems","backgroundColor","border","flexDirection","recordMouseEnter","recordMouseLeave","hideColorGrid","currentTarget","alignItems","justifyContent","margin","fontSize","position","bottom","boxShadow","prevColor","newColor","prevData","newData","cell","values","rowNum","colNum","split","map","num","parseInt","setIndividualEntry","Map","document","dispatch","fontColor"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/FormatPanel/components/FontColor/FontColor.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { store } from '../../../../store/store.js'\r\nimport { useSelector } from 'react-redux';\r\nimport { getFontColor, setFontColor } from '../../../../store/reducers/selectionSlice.js';\r\nimport Data from \"../../../../data/data.js\";\r\nimport recordChange from \"../../../../data/modifiers/recordChange.js\";\r\nimport './FontColor.css'\r\nimport { hexToRgb } from \"../../helper.js\";\r\n\r\nfunction FontColor({ selectionEntries, colors }) {\r\n    const color = useSelector(getFontColor);\r\n    const [insideDropdown, setInsideDropdown] = useState(false);\r\n\r\n    let toggleColorGrid = (e) => {\r\n        let colorGrid = e.target.parentElement.querySelector('.fontColor__colorGrid');\r\n        if (colorGrid.style.opacity == 1) {\r\n            colorGrid.style.opacity = 0;\r\n            colorGrid.style.zIndex = -1;\r\n            colorGrid.style.pointerEvents = 'none';\r\n        } else {\r\n            colorGrid.style.opacity = 1;\r\n            colorGrid.style.zIndex = 3;\r\n            colorGrid.style.pointerEvents = 'auto';\r\n        }\r\n    }\r\n\r\n    let createColorGrid = (colors) => {\r\n        let colorGrid = [];\r\n        let index1 = 0;\r\n        for (const colorSet of colors) {\r\n            let colorSetArr = [];\r\n            let index2 = 0;\r\n            for (const colorOption of colorSet) {\r\n                colorSetArr.push(\r\n                    <button key={index2++} className='fontColor__colorSquareBtn' style={{}} onClick={() => updateFontColor(selectionEntries, color, colorOption)}>\r\n                        <div style={{ width: '100%', height: '100%', display: 'grid', placeItems: 'center' }}>\r\n                            <div style={{ width: '15px', height: '15px', backgroundColor: colorOption, border: colorOption == 'white' || index2 == 4 ? '1px solid lightgray' : 'none' }}></div>\r\n                        </div>\r\n                    </button>\r\n                );\r\n            }\r\n            colorGrid.push(<div key={index1++} style={{ display: 'flex', flexDirection: 'column' }}>{colorSetArr}</div>);\r\n        }\r\n        return <div style={{ display: 'flex' }}>{colorGrid}</div>;\r\n    }\r\n\r\n    let recordMouseEnter = () => {\r\n        setInsideDropdown(true);\r\n    }\r\n\r\n    let recordMouseLeave = () => {\r\n        setInsideDropdown(false);\r\n    }\r\n\r\n    let hideColorGrid = (e) => {\r\n        if (!insideDropdown) {\r\n            e.currentTarget.querySelector('.fontColor__colorGrid').style.opacity = 0;\r\n            e.currentTarget.querySelector('.fontColor__colorGrid').style.zIndex = -1;\r\n            e.currentTarget.querySelector('.fontColor__colorGrid').style.pointerEvents = 'none';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='fontColor' tabIndex='-1' onMouseEnter={recordMouseEnter} onMouseLeave={recordMouseLeave} onBlur={hideColorGrid} >\r\n            <button className='fontColor__btn' onClick={toggleColorGrid}>\r\n                <div className='fontColor__btnDiv' style={{ height: '100%', width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-around' }}>\r\n                    <p style={{ height: '19px', margin: '0 0 4px 0', fontSize: '1rem' }}>A</p>\r\n                    <div className='fontColor__colorBar' style={{ position: 'absolute', bottom: '0px', backgroundColor: color, boxShadow: color == 'white' ? 'inset 0 0 0 1px gray' : 'none' }}></div>\r\n                </div>\r\n            </button>\r\n            <div className='fontColor__colorGrid' >\r\n                {createColorGrid(colors)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet updateFontColor = (selectionEntries, prevColor, newColor) => {\r\n    newColor = hexToRgb(newColor);\r\n    let prevData = new Data();\r\n    let newData = new Data();\r\n    for (const cell of selectionEntries.values()) {\r\n        let [rowNum, colNum] = cell.split(',').map((num) => parseInt(num, 10));\r\n        prevData.setIndividualEntry('.row' + rowNum + '.col' + colNum, new Map([['fontColor', prevColor]]), rowNum, colNum, null);\r\n        newData.setIndividualEntry('.row' + rowNum + '.col' + colNum, new Map([['fontColor', newColor]]), rowNum, colNum, null);\r\n        document.querySelector(`.row${rowNum}.col${colNum}>.cellValueDiv>.cellValue`).style.color = newColor;\r\n    }\r\n    recordChange(prevData, newData);\r\n    store.dispatch(setFontColor({ fontColor: newColor }));\r\n}\r\n\r\nexport { FontColor, updateFontColor };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}