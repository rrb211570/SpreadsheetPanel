{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{getInLine,nextTurn}from'../../../../tests/sequenceHelpers.js';import{getResizableColData,getResizableRowData}from'./resizingHandler.js';import{store}from'./../../../../store/store.js';import{logError,logSuccess}from'../../../../tests/helper.js';function resizersTests(turn){var axisCellsX=document.querySelectorAll('.AxisX');var axisCellsY=document.querySelectorAll('.AxisY');var resizeSelections=[[axisCellsX,-5],[axisCellsY,-1],[[axisCellsX[0]],15],[axisCellsY,12],[[axisCellsX[0]],20],[[axisCellsY[0]],12]];try{if(resizeSelections.length>0)checkReactionOfResizing(1,resizeSelections[0],turn,true,resizeSelections.length);for(var i=1;i<resizeSelections.length;++i)checkReactionOfResizing(i+1,resizeSelections[i],turn,false,resizeSelections.length);}catch(e){console.log('resizingErr: checkReactionOfResizing param error: '+e);logError(null,e);}}function checkHorizontalResizersInitialization(){try{var elems=document.querySelectorAll('.AxisX');var logMsg='';elems.forEach(function(elem,idx){var resizer=elem.querySelector('.resizer-horizontal');if(resizer==null){logMsg=logMsg+'col'+(idx+1)+': horizontal resizer not found\\n';}else if(22!=parseInt(resizer.style.height,10)){logMsg=logMsg+'col'+(idx+1)+': horizontal resizer does not match height of Y-axis cell \\''+resizer.style.height+'\\' : should be \\'22px\\' \\n';}});if(logMsg.length!=0)console.log(logMsg);else console.log('horizontalResizers appended correctly');}catch(error){console.log('checkHorizontalResizersInitialization(): '+error);}}function checkVerticalResizersInitialization(){try{var elems=document.querySelectorAll('.AxisY');var logMsg='';elems.forEach(function(elem,idx){var resizer=elem.querySelector('.resizer-vertical');if(resizer==null){logMsg=logMsg+'row'+idx+': vertical resizer not found\\n';}else if(50!=parseInt(resizer.style.width,10)){logMsg=logMsg+'row'+idx+': vertical resizer does not match width of X-axis cell \\''+resizer.style.width+'\\' : should be \\'50px\\'\\n';}});if(logMsg.length!=0)console.log(logMsg);else console.log('verticalResizers appended correctly');}catch(error){console.log('checkVerticalResizersInitialization(): '+error);}}function checkReactionOfResizing(testCaseIndex,resizeDetails,turn,isFirstCall,totalTestCases){var timer;var _resizeDetails=_slicedToArray(resizeDetails,2),axisCells=_resizeDetails[0],deltaIncrement=_resizeDetails[1];try{var axisClass=getAxisClass(axisCells);var resizer;var delta=0;var index=-1;var myTurnNumber=getInLine(turn);var mouseState=-1;var dimensionsBeforeMove;var dimensionsAfterMove;var changeHistoryBeforeMove;var changeHistoryIndexBeforeMove;var changeHistoryAfterMove;var changeHistoryIndexAfterMove;timer=setInterval(function(){switch(mouseState){case-1:// FIFO waiting queue\nif(turn.current==myTurnNumber){if(isFirstCall){console.log('\\n--------RESIZING TEST-----------------------');checkHorizontalResizersInitialization();checkVerticalResizersInitialization();}mouseState=0;}break;case 0:if(++index<axisCells.length){resizer=getResizer(axisCells[index],axisClass);mouseState++;}else{console.log('resizing affects store and DOM correctly');if(testCaseIndex==totalTestCases)logSuccess('resizingTest()',totalTestCases);nextTurn(turn);// increment turn.current\nclearInterval(timer);}break;case 1:resizer.dispatchEvent(new MouseEvent('mousedown',{bubbles:true,cancelable:true,clientX:0}));try{dimensionsBeforeMove=captureResizerData(axisClass,axisCells[index]);var historyState=store.getState().history;var _ref=[historyState.changeHistory,historyState.changeHistoryIndex];changeHistoryBeforeMove=_ref[0];changeHistoryIndexBeforeMove=_ref[1];}catch(error){console.log('resizingErr: '+error);clearInterval(timer);}mouseState++;break;case 2:case 3:case 4:var params={bubbles:true,cancelable:true};params[axisClass=='AxisX'?'clientX':'clientY']=delta+=deltaIncrement;resizer.dispatchEvent(new MouseEvent('mousemove',params));mouseState++;break;case 5:resizer.dispatchEvent(new MouseEvent('mouseup',{bubbles:true,cancelable:true}));try{dimensionsAfterMove=captureResizerData(axisClass,axisCells[index]);var _historyState=store.getState().history;var _ref2=[_historyState.changeHistory,_historyState.changeHistoryIndex];changeHistoryAfterMove=_ref2[0];changeHistoryIndexAfterMove=_ref2[1];if(!expectedTableChanges(axisClass,dimensionsBeforeMove,dimensionsAfterMove,delta))throw'mousemove: resizer not affecting table correctly';if(!expectedChangeHistoryChanges(axisClass,delta,changeHistoryBeforeMove,changeHistoryIndexBeforeMove,changeHistoryAfterMove,changeHistoryIndexAfterMove))throw'mousemove: resizer not affecting changeHistory properly';}catch(error){console.log('resizingErr: '+error);clearInterval(timer);}delta=0;mouseState=0;break;default:break;}},5);}catch(e){var errMsg='Err: checkReactionOfResizing(): { testCaseIndex: '+testCaseIndex+' } : '+e;console.log(errMsg);logError(errMsg);clearInterval(timer);}}function getAxisClass(axisCells){var arr=[];if(typeof axisCells!==typeof arr)throw'getAxisClass(): axisCells is not an array';if(axisCells.length==0)throw'getAxisClass(): axisCells is empty';if(axisCells instanceof Element)throw'getAxisClass(): axisCells should be an array of DOM elements';if(!(axisCells[0]instanceof Element))throw'getAxisClass(): axisCells should be an array of DOM elements';var axisName=_toConsumableArray(axisCells[0].classList).filter(function(name){return /^Axis.$/.test(name);});if(axisName.length==0)throw'getAxisClass(): axisClass not found in axisCells[0]';if(axisName[0]!='AxisX'&&axisName[0]!='AxisY')throw'getAxisClass(): found axis class not equal to \"AxisX\" or \"AxisY\"';return axisName[0];}function getResizer(axisCell,axisClass){if(!(axisCell instanceof Element))throw'getResizer(): axisCell should be a valid DOM element';var reg=new RegExp(axisClass);var possibleAxisClass=_toConsumableArray(axisCell.classList).filter(function(name){return reg.test(name);});if(possibleAxisClass.length==0)throw'getResizer(): axisCell\\'s axis class must match axis parameter';var resizer=axisCell.querySelector(axisClass=='AxisX'?'.resizer-horizontal':'.resizer-vertical');if(!resizer instanceof Element)throw'getResizer(): resizer not found in axisCell';return resizer;}function captureResizerData(axisClass,axisCell){var tableDimensions=store.getState().tableDimensions;if(axisClass=='AxisX'){var colNum=getResizerIndex(axisClass,axisCell);var cellWidth=parseInt(axisCell.style.width,10);return getResizableColData(colNum,cellWidth,tableDimensions.width);}else{var rowNum=getResizerIndex(axisClass,axisCell);var cellHeight=parseInt(axisCell.style.height,10);return getResizableRowData(rowNum,cellHeight,tableDimensions.height);}}function getResizerIndex(axisClass,axisCell){if(axisClass=='AxisX')return parseInt(_toConsumableArray(axisCell.classList).filter(function(name){return /^col\\d+$/.test(name);})[0].slice(-1),10);else return parseInt(_toConsumableArray(axisCell.classList).filter(function(name){return /^row\\d+$/.test(name);})[0].slice(-1),10);}// check that when delta is applied to all width/marginLeft values in dimensionsBeforeMove,\n// that it is reflected in dimensionsAfterMove\nfunction expectedTableChanges(axisClass,dimensionsBeforeMove,dimensionsAfterMove,delta){try{if(axisClass=='AxisX'){var _iterator=_createForOfIteratorHelper(dimensionsBeforeMove.getIndividualEntries()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),entryKey=_step$value[0],data=_step$value[1];if(!dimensionsAfterMove.hasIndividualEntry(entryKey))throw entryKey+' in dimensionsBeforeMove, but not found in dimensionsAfterMove';var dataAfter=dimensionsAfterMove.getIndividualEntry(entryKey);var beforeStyleMap=data.getStyleMap();var afterStyleMap=dataAfter.getStyleMap();if(beforeStyleMap.size!=1||afterStyleMap.size!=1)throw entryKey+' should not have multiple styleMap entries';if(entryKey=='table'){if(beforeStyleMap.get('width')==null||afterStyleMap.get('width')==null)throw entryKey+' is missing property \"width\"';if(beforeStyleMap.get('width')+delta!=afterStyleMap.get('width'))throw entryKey+' width not updated properly';}else if(!/.col\\d+/.test(entryKey)){if(beforeStyleMap.get('width')==null||afterStyleMap.get('width')==null)throw entryKey+' is missing property \"width\"';if(beforeStyleMap.get('width')+delta!=afterStyleMap.get('width'))throw entryKey+' width not updated properly';if(data.row!=dataAfter.row)throw entryKey+' row does not match';}else{if(data.cellRow!=dataAfter.cellRow)throw entryKey+' row does not match';if(data.cellCol!=dataAfter.cellCol)throw entryKey+' col does not match';if(data.val!=dataAfter.val)throw entryKey+' val does not match';if(beforeStyleMap.get('width')==null){if(beforeStyleMap.get('marginLeft')==null||afterStyleMap.get('marginLeft')==null)throw entryKey+' is missing property \"marginLeft\"';if(beforeStyleMap.get('marginLeft')+delta!=afterStyleMap.get('marginLeft'))throw entryKey+' marginLeft not updated properly';}else{if(afterStyleMap.get('width')==null)throw entryKey+' is missing property \"width\"';if(beforeStyleMap.get('width')+delta!=afterStyleMap.get('width'))throw entryKey+' width not updated properly';}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}else{var _iterator2=_createForOfIteratorHelper(dimensionsBeforeMove.getIndividualEntries()),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _step2$value=_slicedToArray(_step2.value,2),_entryKey=_step2$value[0],_data=_step2$value[1];if(!dimensionsAfterMove.hasIndividualEntry(_entryKey))throw _entryKey+' in dimensionsBeforeMove, but not found in dimensionsAfterMove';var _dataAfter=dimensionsAfterMove.getIndividualEntry(_entryKey);var _beforeStyleMap=_data.getStyleMap();var _afterStyleMap=_dataAfter.getStyleMap();if(_beforeStyleMap.size!=1||_afterStyleMap.size!=1)throw _entryKey+' should not have multiple styleMap entries';if(_beforeStyleMap.get('height')==null||_afterStyleMap.get('height')==null)throw _entryKey+' is missing property \"height\"';if(_beforeStyleMap.get('height')+delta!=_afterStyleMap.get('height'))throw _entryKey+' height not updated properly';if(!/.col\\d+/.test(_entryKey)){if(_data.row!=_dataAfter.row)throw _entryKey+' row does not match';}else{if(_data.cellRow!=_dataAfter.cellRow)throw _entryKey+' row does not match';if(_data.cellCol!=_dataAfter.cellCol)throw _entryKey+' col does not match';if(_data.val!=_dataAfter.val)throw _entryKey+' val does not match';}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}return true;}catch(error){throw'expectedTableChanges(): '+error;}}function expectedChangeHistoryChanges(axisClass,delta,changeHistoryBeforeMove,changeHistoryIndexBeforeMove,changeHistoryAfterMove,changeHistoryIndexAfterMove){try{if(changeHistoryIndexBeforeMove!=changeHistoryIndexAfterMove-1)throw'changeHistoryIndex not updated properly';// preservation\nvar _iterator3=_createForOfIteratorHelper(changeHistoryBeforeMove[changeHistoryIndexBeforeMove].getIndividualEntries()),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _step3$value=_slicedToArray(_step3.value,2),entryKey=_step3$value[0],value=_step3$value[1];if(!changeHistoryAfterMove[changeHistoryIndexBeforeMove].hasIndividualEntry(entryKey))throw'entry not preserved';var valueAfterMove=changeHistoryAfterMove[changeHistoryIndexBeforeMove].getIndividualEntry(entryKey);if(value.getStyleMap().size!=valueAfterMove.getStyleMap().size)throw\"valueAfterMove does not preserve  styleMap pairs of value\";var valueAfterMoveStyleMap=valueAfterMove.getStyleMap();var _iterator5=_createForOfIteratorHelper(value.getStyleMap().entries()),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _step5$value=_slicedToArray(_step5.value,2),property=_step5$value[0],val=_step5$value[1];if(valueAfterMoveStyleMap.get(property)!==val)throw'valueAfterMove does not preserve styleMap pairs of value';}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}if(!/.col\\d+/.test(entryKey)&&entryKey!=='table'&&value.getRow()!=valueAfterMove.getRow())throw'valueAfterMove does not preserve row of value';else if(/.col\\d+/.test(entryKey)&&(value.getCellRow()!=valueAfterMove.getCellRow()||value.getCellCol()!=valueAfterMove.getCellCol()||value.getVal()!=valueAfterMove.getVal()))throw'valueAfterMove does not preserve cellRow/cellCol/val of value';}// check resizing is reflected in changeHistoryAfterMove\n}catch(err){_iterator3.e(err);}finally{_iterator3.f();}var _iterator4=_createForOfIteratorHelper(changeHistoryAfterMove[changeHistoryIndexAfterMove].getIndividualEntries()),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _step4$value=_slicedToArray(_step4.value,2),_entryKey2=_step4$value[0],_valueAfterMove=_step4$value[1];if(_valueAfterMove.getStyleMap().size!=1)throw'unnecessary stylePair in valueAfterMove';if(axisClass=='AxisX'){if(_valueAfterMove.getStyleMap().has('width')){var w=_valueAfterMove.getStyleMap().get('width');if(isNaN(parseInt(w,10))||parseInt(w,10)!==w)throw'horizontal resizing not updating stylePair w/ numerical value';var valueBeforeMove=changeHistoryAfterMove[changeHistoryIndexBeforeMove].getIndividualEntry(_entryKey2);if(valueBeforeMove.getStyleMap().get('width')!=w-delta)throw'width not adjusted by delta in changeHistory';}else if(_valueAfterMove.getStyleMap().has('marginLeft')){var ml=_valueAfterMove.getStyleMap().get('marginLeft');if(isNaN(parseInt(ml,10))||parseInt(ml,10)!==ml)throw'horizontal resizing not updating stylePair w/ numerical value';var _valueBeforeMove=changeHistoryAfterMove[changeHistoryIndexBeforeMove].getIndividualEntry(_entryKey2);if(_valueBeforeMove.getStyleMap().get('marginLeft')!=ml-delta)throw'ml not adjusted by delta in changeHistory';}else throw'horizontal resizing has stylePair property different from height/marginLeft';}else if(axisClass='AxisY'){if(_valueAfterMove.getStyleMap().has('height')){var h=_valueAfterMove.getStyleMap().get('height');if(isNaN(parseInt(h,10))||parseInt(h,10)!==h)throw'vertical resizing not updating stylePair w/ numerical value';var _valueBeforeMove2=changeHistoryAfterMove[changeHistoryIndexBeforeMove].getIndividualEntry(_entryKey2);if(_valueBeforeMove2.getStyleMap().get('height')!=h-delta)throw'height not adjusted by delta in changeHistory';}else throw'vertical resizing has stylePair property different from height';}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}return true;}catch(error){throw'expectedChangeHistoryChanges(): '+error;}}export{resizersTests,checkReactionOfResizing};","map":{"version":3,"names":["getInLine","nextTurn","getResizableColData","getResizableRowData","store","logError","logSuccess","resizersTests","turn","axisCellsX","document","querySelectorAll","axisCellsY","resizeSelections","length","checkReactionOfResizing","i","e","console","log","checkHorizontalResizersInitialization","elems","logMsg","forEach","elem","idx","resizer","querySelector","parseInt","style","height","error","checkVerticalResizersInitialization","width","testCaseIndex","resizeDetails","isFirstCall","totalTestCases","timer","axisCells","deltaIncrement","axisClass","getAxisClass","delta","index","myTurnNumber","mouseState","dimensionsBeforeMove","dimensionsAfterMove","changeHistoryBeforeMove","changeHistoryIndexBeforeMove","changeHistoryAfterMove","changeHistoryIndexAfterMove","setInterval","current","getResizer","clearInterval","dispatchEvent","MouseEvent","bubbles","cancelable","clientX","captureResizerData","historyState","getState","history","changeHistory","changeHistoryIndex","params","expectedTableChanges","expectedChangeHistoryChanges","errMsg","arr","Element","axisName","classList","filter","name","test","axisCell","reg","RegExp","possibleAxisClass","tableDimensions","colNum","getResizerIndex","cellWidth","rowNum","cellHeight","slice","getIndividualEntries","entryKey","data","hasIndividualEntry","dataAfter","getIndividualEntry","beforeStyleMap","getStyleMap","afterStyleMap","size","get","row","cellRow","cellCol","val","value","valueAfterMove","valueAfterMoveStyleMap","entries","property","getRow","getCellRow","getCellCol","getVal","has","w","isNaN","valueBeforeMove","ml","h"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/TablePanel/handlers/resizingHandler/test.js"],"sourcesContent":["import { getInLine, nextTurn } from '../../../../tests/sequenceHelpers.js'\r\nimport { getResizableColData, getResizableRowData } from './resizingHandler.js'\r\nimport { store } from './../../../../store/store.js'\r\nimport { logError, logSuccess } from '../../../../tests/helper.js';\r\n\r\nfunction resizersTests(turn) {\r\n    let axisCellsX = document.querySelectorAll('.AxisX');\r\n    let axisCellsY = document.querySelectorAll('.AxisY');\r\n    let resizeSelections = [[axisCellsX, -5], [axisCellsY, -1], [[axisCellsX[0]], 15], [axisCellsY, 12], [[axisCellsX[0]], 20], [[axisCellsY[0]], 12]]\r\n    try {\r\n        if (resizeSelections.length > 0) checkReactionOfResizing(1, resizeSelections[0], turn, true, resizeSelections.length);\r\n        for (let i = 1; i < resizeSelections.length; ++i) checkReactionOfResizing(i + 1, resizeSelections[i], turn, false, resizeSelections.length);\r\n    } catch (e) {\r\n        console.log('resizingErr: checkReactionOfResizing param error: ' + e);\r\n        logError(null, e);\r\n    }\r\n}\r\n\r\nfunction checkHorizontalResizersInitialization() {\r\n    try {\r\n        let elems = document.querySelectorAll('.AxisX');\r\n        let logMsg = '';\r\n        elems.forEach((elem, idx) => {\r\n            let resizer = elem.querySelector('.resizer-horizontal')\r\n            if (resizer == null) {\r\n                logMsg = logMsg + 'col' + (idx + 1) + ': horizontal resizer not found\\n';\r\n            } else if (22 != (parseInt(resizer.style.height, 10))) {\r\n                logMsg = logMsg + 'col' + (idx + 1) + ': horizontal resizer does not match height of Y-axis cell \\'' + resizer.style.height + '\\' : should be \\'22px\\' \\n';\r\n            }\r\n        })\r\n        if (logMsg.length != 0) console.log(logMsg);\r\n        else console.log('horizontalResizers appended correctly');\r\n    } catch (error) {\r\n        console.log('checkHorizontalResizersInitialization(): ' + error);\r\n    }\r\n}\r\n\r\nfunction checkVerticalResizersInitialization() {\r\n    try {\r\n        let elems = document.querySelectorAll('.AxisY');\r\n        let logMsg = '';\r\n        elems.forEach((elem, idx) => {\r\n            let resizer = elem.querySelector('.resizer-vertical')\r\n            if (resizer == null) {\r\n                logMsg = logMsg + 'row' + idx + ': vertical resizer not found\\n';\r\n            } else if (50 != (parseInt(resizer.style.width, 10))) {\r\n                logMsg = logMsg + 'row' + idx + ': vertical resizer does not match width of X-axis cell \\'' + resizer.style.width + '\\' : should be \\'50px\\'\\n';\r\n            }\r\n        })\r\n        if (logMsg.length != 0) console.log(logMsg);\r\n        else console.log('verticalResizers appended correctly');\r\n    } catch (error) {\r\n        console.log('checkVerticalResizersInitialization(): ' + error);\r\n    }\r\n}\r\n\r\nfunction checkReactionOfResizing(testCaseIndex, resizeDetails, turn, isFirstCall, totalTestCases) {\r\n    let timer;\r\n    let [axisCells, deltaIncrement] = resizeDetails;\r\n    try {\r\n        let axisClass = getAxisClass(axisCells);\r\n        let resizer;\r\n        let delta = 0;\r\n        let index = -1;\r\n        let myTurnNumber = getInLine(turn);\r\n        let mouseState = -1;\r\n        let dimensionsBeforeMove;\r\n        let dimensionsAfterMove;\r\n        let changeHistoryBeforeMove;\r\n        let changeHistoryIndexBeforeMove;\r\n        let changeHistoryAfterMove;\r\n        let changeHistoryIndexAfterMove;\r\n        timer = setInterval(() => {\r\n            switch (mouseState) {\r\n                case -1: // FIFO waiting queue\r\n                    if (turn.current == myTurnNumber) {\r\n                        if (isFirstCall) {\r\n                            console.log('\\n--------RESIZING TEST-----------------------');\r\n                            checkHorizontalResizersInitialization();\r\n                            checkVerticalResizersInitialization();\r\n                        }\r\n                        mouseState = 0;\r\n                    }\r\n                    break;\r\n                case 0:\r\n                    if (++index < axisCells.length) {\r\n                        resizer = getResizer(axisCells[index], axisClass)\r\n                        mouseState++;\r\n                    } else {\r\n                        console.log('resizing affects store and DOM correctly');\r\n                        if (testCaseIndex == totalTestCases) logSuccess('resizingTest()', totalTestCases);\r\n                        nextTurn(turn); // increment turn.current\r\n                        clearInterval(timer);\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    resizer.dispatchEvent(new MouseEvent('mousedown', { bubbles: true, cancelable: true, clientX: 0 }));\r\n                    try {\r\n                        dimensionsBeforeMove = captureResizerData(axisClass, axisCells[index]);\r\n                        let historyState = store.getState().history;\r\n                        [changeHistoryBeforeMove, changeHistoryIndexBeforeMove] = [historyState.changeHistory, historyState.changeHistoryIndex];\r\n                    } catch (error) {\r\n                        console.log('resizingErr: ' + error);\r\n                        clearInterval(timer);\r\n                    }\r\n                    mouseState++;\r\n                    break;\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                    let params = { bubbles: true, cancelable: true };\r\n                    params[axisClass == 'AxisX' ? 'clientX' : 'clientY'] = delta += deltaIncrement;\r\n                    resizer.dispatchEvent(new MouseEvent('mousemove', params));\r\n                    mouseState++;\r\n                    break;\r\n                case 5:\r\n                    resizer.dispatchEvent(new MouseEvent('mouseup', { bubbles: true, cancelable: true }));\r\n                    try {\r\n                        dimensionsAfterMove = captureResizerData(axisClass, axisCells[index]);\r\n                        let historyState = store.getState().history;\r\n                        [changeHistoryAfterMove, changeHistoryIndexAfterMove] = [historyState.changeHistory, historyState.changeHistoryIndex];\r\n                        if (!expectedTableChanges(axisClass, dimensionsBeforeMove, dimensionsAfterMove, delta)) throw 'mousemove: resizer not affecting table correctly';\r\n                        if (!expectedChangeHistoryChanges(axisClass, delta, changeHistoryBeforeMove, changeHistoryIndexBeforeMove, changeHistoryAfterMove, changeHistoryIndexAfterMove)) throw 'mousemove: resizer not affecting changeHistory properly';\r\n                    } catch (error) {\r\n                        console.log('resizingErr: ' + error);\r\n                        clearInterval(timer);\r\n                    }\r\n                    delta = 0;\r\n                    mouseState = 0;\r\n                    break;\r\n                default: break;\r\n            }\r\n        }, 5);\r\n    } catch (e) {\r\n        let errMsg = 'Err: checkReactionOfResizing(): { testCaseIndex: ' + testCaseIndex + ' } : ' + e;\r\n        console.log(errMsg);\r\n        logError(errMsg);\r\n        clearInterval(timer);\r\n    }\r\n}\r\n\r\nfunction getAxisClass(axisCells) {\r\n    let arr = [];\r\n    if (typeof axisCells !== typeof arr) throw 'getAxisClass(): axisCells is not an array';\r\n    if (axisCells.length == 0) throw 'getAxisClass(): axisCells is empty';\r\n    if (axisCells instanceof Element) throw 'getAxisClass(): axisCells should be an array of DOM elements'\r\n    if (!(axisCells[0] instanceof Element)) throw 'getAxisClass(): axisCells should be an array of DOM elements';\r\n    let axisName = [...axisCells[0].classList].filter(name => /^Axis.$/.test(name));\r\n    if (axisName.length == 0) throw 'getAxisClass(): axisClass not found in axisCells[0]';\r\n    if (axisName[0] != 'AxisX' && axisName[0] != 'AxisY') throw 'getAxisClass(): found axis class not equal to \"AxisX\" or \"AxisY\"'\r\n    return axisName[0];\r\n}\r\n\r\nfunction getResizer(axisCell, axisClass) {\r\n    if (!(axisCell instanceof Element)) throw 'getResizer(): axisCell should be a valid DOM element';\r\n    let reg = new RegExp(axisClass);\r\n    let possibleAxisClass = [...axisCell.classList].filter(name => reg.test(name));\r\n    if (possibleAxisClass.length == 0) throw 'getResizer(): axisCell\\'s axis class must match axis parameter';\r\n    let resizer = axisCell.querySelector(axisClass == 'AxisX' ? '.resizer-horizontal' : '.resizer-vertical');\r\n    if (!resizer instanceof Element) throw 'getResizer(): resizer not found in axisCell';\r\n    return resizer;\r\n}\r\n\r\nfunction captureResizerData(axisClass, axisCell) {\r\n    let tableDimensions = store.getState().tableDimensions;\r\n    if (axisClass == 'AxisX') {\r\n        let colNum = getResizerIndex(axisClass, axisCell);\r\n        let cellWidth = parseInt(axisCell.style.width, 10);\r\n        return getResizableColData(colNum, cellWidth, tableDimensions.width)\r\n    } else {\r\n        let rowNum = getResizerIndex(axisClass, axisCell);\r\n        let cellHeight = parseInt(axisCell.style.height, 10);\r\n        return getResizableRowData(rowNum, cellHeight, tableDimensions.height);\r\n    }\r\n}\r\n\r\nfunction getResizerIndex(axisClass, axisCell) {\r\n    if (axisClass == 'AxisX') return parseInt([...axisCell.classList].filter(name => /^col\\d+$/.test(name))[0].slice(-1), 10);\r\n    else return parseInt([...axisCell.classList].filter(name => /^row\\d+$/.test(name))[0].slice(-1), 10);\r\n}\r\n\r\n// check that when delta is applied to all width/marginLeft values in dimensionsBeforeMove,\r\n// that it is reflected in dimensionsAfterMove\r\nfunction expectedTableChanges(axisClass, dimensionsBeforeMove, dimensionsAfterMove, delta) {\r\n    try {\r\n        if (axisClass == 'AxisX') {\r\n            for (const [entryKey, data] of dimensionsBeforeMove.getIndividualEntries()) {\r\n                if (!dimensionsAfterMove.hasIndividualEntry(entryKey)) throw entryKey + ' in dimensionsBeforeMove, but not found in dimensionsAfterMove';\r\n                let dataAfter = dimensionsAfterMove.getIndividualEntry(entryKey);\r\n                let beforeStyleMap = data.getStyleMap();\r\n                let afterStyleMap = dataAfter.getStyleMap();\r\n                if (beforeStyleMap.size != 1 || afterStyleMap.size != 1) throw entryKey + ' should not have multiple styleMap entries'\r\n                if (entryKey == 'table') {\r\n                    if (beforeStyleMap.get('width') == null || afterStyleMap.get('width') == null) throw entryKey + ' is missing property \"width\"';\r\n                    if (beforeStyleMap.get('width') + delta != afterStyleMap.get('width')) throw entryKey + ' width not updated properly';\r\n                } else if (!/.col\\d+/.test(entryKey)) {\r\n                    if (beforeStyleMap.get('width') == null || afterStyleMap.get('width') == null) throw entryKey + ' is missing property \"width\"';\r\n                    if (beforeStyleMap.get('width') + delta != afterStyleMap.get('width')) throw entryKey + ' width not updated properly';\r\n                    if (data.row != dataAfter.row) throw entryKey + ' row does not match';\r\n                } else {\r\n                    if (data.cellRow != dataAfter.cellRow) throw entryKey + ' row does not match';\r\n                    if (data.cellCol != dataAfter.cellCol) throw entryKey + ' col does not match';\r\n                    if (data.val != dataAfter.val) throw entryKey + ' val does not match';\r\n                    if (beforeStyleMap.get('width') == null) {\r\n                        if (beforeStyleMap.get('marginLeft') == null || afterStyleMap.get('marginLeft') == null) throw entryKey + ' is missing property \"marginLeft\"';\r\n                        if (beforeStyleMap.get('marginLeft') + delta != afterStyleMap.get('marginLeft')) throw entryKey + ' marginLeft not updated properly';\r\n                    } else {\r\n                        if (afterStyleMap.get('width') == null) throw entryKey + ' is missing property \"width\"';\r\n                        if (beforeStyleMap.get('width') + delta != afterStyleMap.get('width')) throw entryKey + ' width not updated properly';\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            for (const [entryKey, data] of dimensionsBeforeMove.getIndividualEntries()) {\r\n                if (!dimensionsAfterMove.hasIndividualEntry(entryKey)) throw entryKey + ' in dimensionsBeforeMove, but not found in dimensionsAfterMove';\r\n                let dataAfter = dimensionsAfterMove.getIndividualEntry(entryKey);\r\n                let beforeStyleMap = data.getStyleMap();\r\n                let afterStyleMap = dataAfter.getStyleMap();\r\n                if (beforeStyleMap.size != 1 || afterStyleMap.size != 1) throw entryKey + ' should not have multiple styleMap entries'\r\n                if (beforeStyleMap.get('height') == null || afterStyleMap.get('height') == null) throw entryKey + ' is missing property \"height\"';\r\n                if (beforeStyleMap.get('height') + delta != afterStyleMap.get('height')) throw entryKey + ' height not updated properly';\r\n                if (!/.col\\d+/.test(entryKey)) {\r\n                    if (data.row != dataAfter.row) throw entryKey + ' row does not match';\r\n                } else {\r\n                    if (data.cellRow != dataAfter.cellRow) throw entryKey + ' row does not match';\r\n                    if (data.cellCol != dataAfter.cellCol) throw entryKey + ' col does not match';\r\n                    if (data.val != dataAfter.val) throw entryKey + ' val does not match';\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    } catch (error) {\r\n        throw 'expectedTableChanges(): ' + error;\r\n    }\r\n}\r\n\r\nfunction expectedChangeHistoryChanges(axisClass, delta, changeHistoryBeforeMove, changeHistoryIndexBeforeMove, changeHistoryAfterMove, changeHistoryIndexAfterMove) {\r\n    try {\r\n        if (changeHistoryIndexBeforeMove != changeHistoryIndexAfterMove - 1) throw 'changeHistoryIndex not updated properly';\r\n        // preservation\r\n        for (const [entryKey, value] of changeHistoryBeforeMove[changeHistoryIndexBeforeMove].getIndividualEntries()) {\r\n            if (!changeHistoryAfterMove[changeHistoryIndexBeforeMove].hasIndividualEntry(entryKey)) throw 'entry not preserved';\r\n            let valueAfterMove = changeHistoryAfterMove[changeHistoryIndexBeforeMove].getIndividualEntry(entryKey);\r\n            if (value.getStyleMap().size != valueAfterMove.getStyleMap().size) throw \"valueAfterMove does not preserve  styleMap pairs of value\";\r\n            let valueAfterMoveStyleMap = valueAfterMove.getStyleMap();\r\n            for (const [property, val] of value.getStyleMap().entries()) {\r\n                if (valueAfterMoveStyleMap.get(property) !== val) throw 'valueAfterMove does not preserve styleMap pairs of value';\r\n            }\r\n            if (!/.col\\d+/.test(entryKey) && entryKey !== 'table' && value.getRow() != valueAfterMove.getRow()) throw 'valueAfterMove does not preserve row of value';\r\n            else if (/.col\\d+/.test(entryKey) && (value.getCellRow() != valueAfterMove.getCellRow()\r\n                || value.getCellCol() != valueAfterMove.getCellCol()\r\n                || value.getVal() != valueAfterMove.getVal())) throw 'valueAfterMove does not preserve cellRow/cellCol/val of value';\r\n        }\r\n        // check resizing is reflected in changeHistoryAfterMove\r\n        for (const [entryKey, valueAfterMove] of changeHistoryAfterMove[changeHistoryIndexAfterMove].getIndividualEntries()) {\r\n            if (valueAfterMove.getStyleMap().size != 1) throw 'unnecessary stylePair in valueAfterMove';\r\n            if (axisClass == 'AxisX') {\r\n                if (valueAfterMove.getStyleMap().has('width')) {\r\n                    let w = valueAfterMove.getStyleMap().get('width');\r\n                    if (isNaN(parseInt(w, 10)) || parseInt(w, 10) !== w) throw 'horizontal resizing not updating stylePair w/ numerical value';\r\n                    let valueBeforeMove = changeHistoryAfterMove[changeHistoryIndexBeforeMove].getIndividualEntry(entryKey);\r\n                    if (valueBeforeMove.getStyleMap().get('width') != w - delta) throw 'width not adjusted by delta in changeHistory';\r\n                } else if (valueAfterMove.getStyleMap().has('marginLeft')) {\r\n                    let ml = valueAfterMove.getStyleMap().get('marginLeft');\r\n                    if (isNaN(parseInt(ml, 10)) || parseInt(ml, 10) !== ml) throw 'horizontal resizing not updating stylePair w/ numerical value';\r\n                    let valueBeforeMove = changeHistoryAfterMove[changeHistoryIndexBeforeMove].getIndividualEntry(entryKey);\r\n                    if (valueBeforeMove.getStyleMap().get('marginLeft') != ml - delta) throw 'ml not adjusted by delta in changeHistory';\r\n                } else throw 'horizontal resizing has stylePair property different from height/marginLeft';\r\n            } else if (axisClass = 'AxisY') {\r\n                if (valueAfterMove.getStyleMap().has('height')) {\r\n                    let h = valueAfterMove.getStyleMap().get('height');\r\n                    if (isNaN(parseInt(h, 10)) || parseInt(h, 10) !== h) throw 'vertical resizing not updating stylePair w/ numerical value';\r\n                    let valueBeforeMove = changeHistoryAfterMove[changeHistoryIndexBeforeMove].getIndividualEntry(entryKey);\r\n                    if (valueBeforeMove.getStyleMap().get('height') != h - delta) throw 'height not adjusted by delta in changeHistory';\r\n                } else throw 'vertical resizing has stylePair property different from height';\r\n            }\r\n        }\r\n        return true;\r\n    } catch (error) {\r\n        throw 'expectedChangeHistoryChanges(): ' + error;\r\n    }\r\n}\r\n\r\nexport { resizersTests, checkReactionOfResizing };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}