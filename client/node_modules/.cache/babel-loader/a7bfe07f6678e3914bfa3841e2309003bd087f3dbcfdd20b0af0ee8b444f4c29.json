{"ast":null,"code":"import Data from '../data.js';\nimport updateCollectedData from './updateCollectedData.js';\nimport { store } from '../../store/store.js';\nimport { newHistoryState } from '../../store/reducers/historySlice.js';\nfunction recordChange(dataBeforeChange, dataAfterChange) {\n  let history = store.getState().history;\n  let prevRecordedData = updatePrevRecordedData(history.changeHistory[history.changeHistoryIndex], dataBeforeChange);\n  let updatedCollectedData = updateCollectedData(dataAfterChange, history.collectedData);\n  store.dispatch(newHistoryState({\n    prevRecordedData,\n    dataAfterChange,\n    collectedData: updatedCollectedData\n  }));\n}\nfunction updatePrevRecordedData(prevData, dataBeforeChange) {\n  let updatedPrevData = new Data();\n  for (const [entryKey, data] of dataBeforeChange.getIndividualEntries()) {\n    let styleMap = new Map();\n    if (prevData.hasIndividualEntry(entryKey)) {\n      styleMap = prevData.getIndividualEntry(entryKey).getStyleMap();\n    }\n    for (const [property, val] of data.getStyleMap().entries()) styleMap.set(property, val);\n    let args = [entryKey, styleMap];\n    if (entryKey != 'table' && !/\\.col\\d+/.test(entryKey)) args.push(data.getRow());\n    if (/\\.col\\d+/.test(entryKey)) {\n      args.push(data.getCellRow(), data.getCellCol());\n      if (prevData.hasIndividualEntry(entryKey)) args.push(prevData.getIndividualEntry(entryKey).getVal());else args.push(data.getVal());\n    }\n    updatedPrevData.setIndividualEntry(...args);\n  }\n  for (const [entryKey, data] of prevData.getIndividualEntries()) {\n    let args = [entryKey, data.getStyleMap()];\n    if (entryKey != 'table' && !/\\.col\\d+/.test(entryKey)) args.push(data.getRow());\n    if (/\\.col\\d+/.test(entryKey)) args.push(data.getCellRow(), data.getCellCol(), data.getVal());\n    if (!updatedPrevData.hasIndividualEntry(entryKey)) updatedPrevData.setIndividualEntry(...args);\n  }\n  // group entries\n  for (const [group, styleMap] of dataBeforeChange.getGroupEntries()) {\n    let updatedStyleMap = new Map();\n    if (prevData.hasGroup(group)) {\n      updatedStyleMap = prevData.getGroup(group);\n    }\n    for (const [property, val] of styleMap.entries()) updatedStyleMap.set(property, val);\n    updatedPrevData.setGroup(group, updatedStyleMap);\n  }\n  for (const [group, styleMap] of prevData.getGroupEntries()) {\n    if (!updatedPrevData.hasGroup(group)) updatedPrevData.setGroup(group, styleMap);\n  }\n  return updatedPrevData;\n}\nexport default recordChange;","map":{"version":3,"names":["Data","updateCollectedData","store","newHistoryState","recordChange","dataBeforeChange","dataAfterChange","history","getState","prevRecordedData","updatePrevRecordedData","changeHistory","changeHistoryIndex","updatedCollectedData","collectedData","dispatch","prevData","updatedPrevData","entryKey","data","getIndividualEntries","styleMap","Map","hasIndividualEntry","getIndividualEntry","getStyleMap","property","val","entries","set","args","test","push","getRow","getCellRow","getCellCol","getVal","setIndividualEntry","group","getGroupEntries","updatedStyleMap","hasGroup","getGroup","setGroup"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/data/modifiers/recordChange.js"],"sourcesContent":["import Data from '../data.js';\r\nimport updateCollectedData from './updateCollectedData.js';\r\nimport {store} from '../../store/store.js'\r\nimport {newHistoryState} from '../../store/reducers/historySlice.js'\r\n\r\nfunction recordChange(dataBeforeChange, dataAfterChange) {\r\n    let history = store.getState().history;\r\n    let prevRecordedData = updatePrevRecordedData(history.changeHistory[history.changeHistoryIndex], dataBeforeChange);\r\n    let updatedCollectedData = updateCollectedData(dataAfterChange, history.collectedData);\r\n    store.dispatch(newHistoryState({prevRecordedData, dataAfterChange, collectedData: updatedCollectedData}));\r\n}\r\nfunction updatePrevRecordedData(prevData, dataBeforeChange) {\r\n    let updatedPrevData = new Data();\r\n    for (const [entryKey, data] of dataBeforeChange.getIndividualEntries()) {\r\n        let styleMap = new Map();\r\n        if (prevData.hasIndividualEntry(entryKey)) {\r\n            styleMap = prevData.getIndividualEntry(entryKey).getStyleMap();\r\n        }\r\n        for (const [property, val] of data.getStyleMap().entries()) styleMap.set(property, val);\r\n        let args = [entryKey, styleMap];\r\n        if (entryKey != 'table' && !/\\.col\\d+/.test(entryKey)) args.push(data.getRow());\r\n        if (/\\.col\\d+/.test(entryKey)) {\r\n            args.push(data.getCellRow(), data.getCellCol());\r\n            if (prevData.hasIndividualEntry(entryKey)) args.push(prevData.getIndividualEntry(entryKey).getVal());\r\n            else args.push(data.getVal());\r\n        }\r\n        updatedPrevData.setIndividualEntry(...args);\r\n    }\r\n    for (const [entryKey, data] of prevData.getIndividualEntries()) {\r\n        let args = [entryKey, data.getStyleMap()];\r\n        if (entryKey != 'table' && !/\\.col\\d+/.test(entryKey)) args.push(data.getRow());\r\n        if (/\\.col\\d+/.test(entryKey)) args.push(data.getCellRow(), data.getCellCol(), data.getVal());\r\n        if (!updatedPrevData.hasIndividualEntry(entryKey)) updatedPrevData.setIndividualEntry(...args);\r\n    }\r\n    // group entries\r\n    for (const [group, styleMap] of dataBeforeChange.getGroupEntries()) {\r\n        let updatedStyleMap = new Map();\r\n        if (prevData.hasGroup(group)) {\r\n            updatedStyleMap = prevData.getGroup(group);\r\n        }\r\n        for (const [property, val] of styleMap.entries()) updatedStyleMap.set(property, val);\r\n        updatedPrevData.setGroup(group, updatedStyleMap);\r\n    }\r\n    for (const [group, styleMap] of prevData.getGroupEntries()) {\r\n        if (!updatedPrevData.hasGroup(group)) updatedPrevData.setGroup(group, styleMap);\r\n    }\r\n    return updatedPrevData;\r\n}\r\n\r\nexport default recordChange;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}