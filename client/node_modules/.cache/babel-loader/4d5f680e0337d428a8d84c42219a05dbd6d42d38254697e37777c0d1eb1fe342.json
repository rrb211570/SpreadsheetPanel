{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst NO_COMMAND = 'No Command';\nconst NO_CHANGE = 'No Change';\nexport const keyboardEventsSlice = createSlice({\n  name: 'keyboardEvents',\n  initialState: {\n    inputMode: NO_COMMAND,\n    enableTest: true,\n    outcome: NO_CHANGE,\n    timeTravelCounter: 0 // used only for testing purposes in undo/redo()\n  },\n\n  reducers: {\n    enableTest(state, action) {\n      state.inputMode = state.inputMode;\n      state.enableTest = action.enableTest;\n      state.outcome = state.outcome;\n      state.timeTravelCounter = state.timeTravelCounter;\n    },\n    trackEvent(state, action) {\n      if (action.payload.inputMode != undefined) state.inputMode = action.payload.inputMode;\n      if (action.payload.outcome != undefined) state.outcome = action.payload.outcome;\n      if (action.payload.timeTravelCounter != undefined) state.timeTravelCounter = action.payload.timeTravelCounter;\n    }\n  }\n});\nexport const {\n  enableTest,\n  trackEvent\n} = keyboardEventsSlice.actions;\nexport const getKeyEventState = state => [state.keyboardEvents.inputMode, state.keyboardEvents.enableTest, state.keyboardEvents.outcome, state.keyboardEvents.timeTravelCounter];\nexport default keyboardEventsSlice.reducer;","map":{"version":3,"names":["createSlice","NO_COMMAND","NO_CHANGE","keyboardEventsSlice","name","initialState","inputMode","enableTest","outcome","timeTravelCounter","reducers","state","action","trackEvent","payload","undefined","actions","getKeyEventState","keyboardEvents","reducer"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/store/reducers/keyboardEventsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst NO_COMMAND = 'No Command';\r\nconst NO_CHANGE = 'No Change'\r\nexport const keyboardEventsSlice = createSlice({\r\n    name: 'keyboardEvents',\r\n    initialState: {\r\n        inputMode: NO_COMMAND,\r\n        enableTest: true,\r\n        outcome: NO_CHANGE,\r\n        timeTravelCounter: 0 // used only for testing purposes in undo/redo()\r\n    },\r\n    reducers: {\r\n        enableTest(state, action) {\r\n            state.inputMode = state.inputMode;\r\n            state.enableTest = action.enableTest;\r\n            state.outcome = state.outcome;\r\n            state.timeTravelCounter = state.timeTravelCounter;\r\n        },\r\n        trackEvent(state, action) {\r\n            if(action.payload.inputMode!=undefined) state.inputMode = action.payload.inputMode;\r\n            if(action.payload.outcome!=undefined) state.outcome = action.payload.outcome;\r\n            if(action.payload.timeTravelCounter!=undefined) state.timeTravelCounter = action.payload.timeTravelCounter;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { enableTest, trackEvent } = keyboardEventsSlice.actions;\r\nexport const getKeyEventState = state => [state.keyboardEvents.inputMode, state.keyboardEvents.enableTest, state.keyboardEvents.outcome, state.keyboardEvents.timeTravelCounter];\r\n\r\nexport default keyboardEventsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAG,YAAY;AAC/B,MAAMC,SAAS,GAAG,WAAW;AAC7B,OAAO,MAAMC,mBAAmB,GAAGH,WAAW,CAAC;EAC3CI,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAE;IACVC,SAAS,EAAEL,UAAU;IACrBM,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAEN,SAAS;IAClBO,iBAAiB,EAAE,CAAC,CAAC;EACzB,CAAC;;EACDC,QAAQ,EAAE;IACNH,UAAU,CAACI,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS;MACjCK,KAAK,CAACJ,UAAU,GAAGK,MAAM,CAACL,UAAU;MACpCI,KAAK,CAACH,OAAO,GAAGG,KAAK,CAACH,OAAO;MAC7BG,KAAK,CAACF,iBAAiB,GAAGE,KAAK,CAACF,iBAAiB;IACrD,CAAC;IACDI,UAAU,CAACF,KAAK,EAAEC,MAAM,EAAE;MACtB,IAAGA,MAAM,CAACE,OAAO,CAACR,SAAS,IAAES,SAAS,EAAEJ,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACE,OAAO,CAACR,SAAS;MAClF,IAAGM,MAAM,CAACE,OAAO,CAACN,OAAO,IAAEO,SAAS,EAAEJ,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACE,OAAO,CAACN,OAAO;MAC5E,IAAGI,MAAM,CAACE,OAAO,CAACL,iBAAiB,IAAEM,SAAS,EAAEJ,KAAK,CAACF,iBAAiB,GAAGG,MAAM,CAACE,OAAO,CAACL,iBAAiB;IAC9G;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF,UAAU;EAAEM;AAAW,CAAC,GAAGV,mBAAmB,CAACa,OAAO;AACrE,OAAO,MAAMC,gBAAgB,GAAGN,KAAK,IAAI,CAACA,KAAK,CAACO,cAAc,CAACZ,SAAS,EAAEK,KAAK,CAACO,cAAc,CAACX,UAAU,EAAEI,KAAK,CAACO,cAAc,CAACV,OAAO,EAAEG,KAAK,CAACO,cAAc,CAACT,iBAAiB,CAAC;AAEhL,eAAeN,mBAAmB,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}