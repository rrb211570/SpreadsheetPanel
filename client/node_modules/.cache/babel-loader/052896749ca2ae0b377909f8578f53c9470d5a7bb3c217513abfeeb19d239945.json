{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{logError,logSuccess}from'../../../../../tests/helper.js';import{getInLine,nextTurn}from'../../../../../tests/sequenceHelpers.js';import{store}from'./../../../../../store/store.js';var WAIT_IN_QUEUE=-1;var ARRANGE_AND_ACTION=0;var ASSERT=1;var ARRANGE_AND_ACTION_SINGLE_CLICK=0;var ASSERT_SINGLE_CLICK=1;var ACTION_DOUBLE_CLICK=2;var ASSERT_DOUBLE_CLICK=3;function selectionTest(atomicTurn){var selections=[[4,5],[1,1],[3,7],[8,2],[2,4]];try{if(selections.length>0)checkReactionOfDoubleClickSelection(1,selections[0],atomicTurn,true,selections.length);for(var i=1;i<selections.length;++i)checkReactionOfDoubleClickSelection(i+1,selections[i],atomicTurn,false,selections.length);}catch(e){console.log('Error: checkReactionOfDoubleClickSelection param error: '+e);logError(null,null,null,e);}}function checkReactionOfSingleClickSelection(testCaseIndex,testDetails,atomicTurn,isFirstCall,totalTestCases){var _testDetails=_slicedToArray(testDetails,2),rowNum=_testDetails[0],colNum=_testDetails[1];var cell=document.querySelector(\".row\".concat(rowNum,\".col\").concat(colNum,\" .coverDiv\"));var myTurnNumber=getInLine(atomicTurn);var stage=WAIT_IN_QUEUE;var prevSelectionEntries;var expectedSelectionEntries;var timer=setInterval(function(){try{switch(stage){case WAIT_IN_QUEUE:if(atomicTurn.current==myTurnNumber){if(isFirstCall)console.log('\\n--------SELECTION TEST (single click)--------------------');stage=ARRANGE_AND_ACTION;}break;case ARRANGE_AND_ACTION:// arrange\nprevSelectionEntries=store.getState().selection.entries;expectedSelectionEntries=new Set([\"\".concat(rowNum,\",\").concat(colNum)]);// action\ncell.focus();cell.dispatchEvent(new MouseEvent('mousedown',{bubbles:true,cancelable:true,clientX:0}));stage=ASSERT;break;case ASSERT:compareStoreAndDOM_singleClick(prevSelectionEntries,expectedSelectionEntries);console.log('selection (single click) affects store and DOM correctly');if(testCaseIndex==totalTestCases)logSuccess('singleClickSelectionTest',totalTestCases);nextTurn(atomicTurn);clearInterval(timer);break;}}catch(e){var errMsg='Err: checkReactionOfSingleClickSelection(): { testCaseIndex: '+testCaseIndex+' } : '+e;console.log(errMsg);logError(errMsg);clearInterval(timer);}},200);}function checkReactionOfDoubleClickSelection(testCaseIndex,testDetails,atomicTurn,isFirstCall,totalTestCases){var _testDetails2=_slicedToArray(testDetails,2),rowNum=_testDetails2[0],colNum=_testDetails2[1];var cell=document.querySelector(\".row\".concat(rowNum,\".col\").concat(colNum,\" .coverDiv\"));var myTurnNumber=getInLine(atomicTurn);var stage=WAIT_IN_QUEUE;var prevSelectionEntries;var expectedSelectionEntries;var timer=setInterval(function(){try{switch(stage){case WAIT_IN_QUEUE:if(atomicTurn.current==myTurnNumber){if(isFirstCall)console.log('\\n--------SELECTION TEST (DOUBLE CLICK)--------------------');stage=ARRANGE_AND_ACTION_SINGLE_CLICK;}break;case ARRANGE_AND_ACTION_SINGLE_CLICK:// arrange\nprevSelectionEntries=store.getState().selection.entries;expectedSelectionEntries=new Set([\"\".concat(rowNum,\",\").concat(colNum)]);// action\ncell.focus();cell.dispatchEvent(new MouseEvent('mousedown',{bubbles:true,cancelable:true,clientX:0}));stage=ASSERT_SINGLE_CLICK;break;case ASSERT_SINGLE_CLICK:compareStoreAndDOM_singleClick(prevSelectionEntries,expectedSelectionEntries);console.log('selection (single click) affects store and DOM correctly');stage=ACTION_DOUBLE_CLICK;break;case ACTION_DOUBLE_CLICK:cell.dispatchEvent(new MouseEvent('dblclick',{bubbles:true,cancelable:true,clientX:0}));stage=ASSERT_DOUBLE_CLICK;break;case ASSERT_DOUBLE_CLICK:compareStoreAndDOM_doubleClick(prevSelectionEntries,expectedSelectionEntries);console.log('selection (double click) affects store and DOM correctly');if(testCaseIndex==totalTestCases)logSuccess('doubleClickSelectionTest',totalTestCases);nextTurn(atomicTurn);clearInterval(timer);break;default:break;}}catch(e){var errMsg='Err: checkReactionOfDoubleClickSelection(): { testCaseIndex: '+testCaseIndex+' } : '+e;console.log(errMsg);logError(errMsg);clearInterval(timer);}},200);}function compareStoreAndDOM_singleClick(prevSelectionEntries,expectedSelectionEntries){var currentSelectionEntries=store.getState().selection.entries;assertCurrentSelectionEqualsExpectedSelection(currentSelectionEntries,expectedSelectionEntries);var setDifference=getSetDifference(prevSelectionEntries,currentSelectionEntries);assertSetDifferenceClearedOfHighlights(setDifference);assertCurrentSelectionHighlighted(currentSelectionEntries);// different here\n}function compareStoreAndDOM_doubleClick(prevSelectionEntries,expectedSelectionEntries){var currentSelectionEntries=store.getState().selection.entries;assertCurrentSelectionEqualsExpectedSelection(currentSelectionEntries,expectedSelectionEntries);var setDifference=getSetDifference(prevSelectionEntries,currentSelectionEntries);assertSetDifferenceClearedOfHighlights(setDifference);assertCurrentSelectionHighlighted(currentSelectionEntries);// different here\n}function assertCurrentSelectionEqualsExpectedSelection(currentSelectionEntries,expectedSelectionEntries){var _iterator=_createForOfIteratorHelper(currentSelectionEntries.values()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var entry=_step.value;if(!expectedSelectionEntries.has(entry))throw'compareStoreAndDOM(): currentSelectionEntries has entry that expectedSelectionEntries does not have';}}catch(err){_iterator.e(err);}finally{_iterator.f();}var _iterator2=_createForOfIteratorHelper(expectedSelectionEntries.values()),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _entry=_step2.value;if(!currentSelectionEntries.has(_entry))throw'compareStoreAndDOM(): expectedSelectionEntries has entry that currentSelectionEntries does not have';}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}function getSetDifference(prevSelectionEntries,currentSelectionEntries){var setDifference=new Set();var _iterator3=_createForOfIteratorHelper(prevSelectionEntries.values()),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var entry=_step3.value;if(!currentSelectionEntries.has(entry))setDifference.add(entry);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}return setDifference;}function assertSetDifferenceClearedOfHighlights(setDifference){var _iterator4=_createForOfIteratorHelper(setDifference.values()),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var entry=_step4.value;var rowNum=parseInt(entry.split(',')[0],10);var colNum=parseInt(entry.split(',')[1],10);var highlightLayer=document.querySelector(\".row\".concat(rowNum,\".col\").concat(colNum,\" .coverDiv\"));if(highlightLayer.style.boxShadow!='none')throw'compareStoreAndDOM(): prevSelectedCell not cleared of highlight: '+rowNum+' '+colNum;}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}function assertCurrentSelectionHighlighted(currentSelectionEntries){var _iterator5=_createForOfIteratorHelper(currentSelectionEntries.values()),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var entry=_step5.value;var rowNum=parseInt(entry.split(',')[0],10);var colNum=parseInt(entry.split(',')[1],10);var highlightLayer=document.querySelector(\".row\".concat(rowNum,\".col\").concat(colNum,\" .coverDiv\"));if(highlightLayer.style.boxShadow!='blue 0px 0px 0px 2px inset')throw'compareStoreAndDOM(): currentSelectionEntry not highlighted properly '+rowNum+' '+colNum;}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}}export{selectionTest,checkReactionOfSingleClickSelection,checkReactionOfDoubleClickSelection};","map":{"version":3,"names":["logError","logSuccess","getInLine","nextTurn","store","WAIT_IN_QUEUE","ARRANGE_AND_ACTION","ASSERT","ARRANGE_AND_ACTION_SINGLE_CLICK","ASSERT_SINGLE_CLICK","ACTION_DOUBLE_CLICK","ASSERT_DOUBLE_CLICK","selectionTest","atomicTurn","selections","length","checkReactionOfDoubleClickSelection","i","e","console","log","checkReactionOfSingleClickSelection","testCaseIndex","testDetails","isFirstCall","totalTestCases","rowNum","colNum","cell","document","querySelector","myTurnNumber","stage","prevSelectionEntries","expectedSelectionEntries","timer","setInterval","current","getState","selection","entries","Set","focus","dispatchEvent","MouseEvent","bubbles","cancelable","clientX","compareStoreAndDOM_singleClick","clearInterval","errMsg","compareStoreAndDOM_doubleClick","currentSelectionEntries","assertCurrentSelectionEqualsExpectedSelection","setDifference","getSetDifference","assertSetDifferenceClearedOfHighlights","assertCurrentSelectionHighlighted","values","entry","has","add","parseInt","split","highlightLayer","style","boxShadow"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/TablePanel/handlers/cellHandler/selectionHandler/test.js"],"sourcesContent":["import { logError, logSuccess } from '../../../../../tests/helper.js';\r\nimport { getInLine, nextTurn } from '../../../../../tests/sequenceHelpers.js'\r\nimport { store } from './../../../../../store/store.js'\r\n\r\nconst WAIT_IN_QUEUE = -1;\r\nconst ARRANGE_AND_ACTION = 0;\r\nconst ASSERT = 1;\r\n\r\nconst ARRANGE_AND_ACTION_SINGLE_CLICK = 0;\r\nconst ASSERT_SINGLE_CLICK = 1;\r\nconst ACTION_DOUBLE_CLICK = 2;\r\nconst ASSERT_DOUBLE_CLICK = 3;\r\n\r\nfunction selectionTest(atomicTurn) {\r\n    let selections = [[4, 5], [1, 1], [3, 7], [8, 2], [2, 4]];\r\n    try {\r\n        if (selections.length > 0) checkReactionOfDoubleClickSelection(1, selections[0], atomicTurn, true, selections.length);\r\n        for (let i = 1; i < selections.length; ++i) checkReactionOfDoubleClickSelection(i + 1, selections[i], atomicTurn, false, selections.length);\r\n    } catch (e) {\r\n        console.log('Error: checkReactionOfDoubleClickSelection param error: ' + e);\r\n        logError(null, null, null, e);\r\n    }\r\n}\r\n\r\nfunction checkReactionOfSingleClickSelection(testCaseIndex, testDetails, atomicTurn, isFirstCall, totalTestCases) {\r\n    let [rowNum, colNum] = testDetails;\r\n    let cell = document.querySelector(`.row${rowNum}.col${colNum} .coverDiv`);\r\n    let myTurnNumber = getInLine(atomicTurn);\r\n    let stage = WAIT_IN_QUEUE;\r\n    let prevSelectionEntries;\r\n    let expectedSelectionEntries;\r\n    let timer = setInterval(() => {\r\n        try {\r\n            switch (stage) {\r\n                case WAIT_IN_QUEUE:\r\n                    if (atomicTurn.current == myTurnNumber) {\r\n                        if (isFirstCall) console.log('\\n--------SELECTION TEST (single click)--------------------');\r\n                        stage = ARRANGE_AND_ACTION;\r\n                    }\r\n                    break;\r\n                case ARRANGE_AND_ACTION:\r\n                    // arrange\r\n                    prevSelectionEntries = store.getState().selection.entries;\r\n                    expectedSelectionEntries = new Set([`${rowNum},${colNum}`])\r\n\r\n                    // action\r\n                    cell.focus();\r\n                    cell.dispatchEvent(new MouseEvent('mousedown', { bubbles: true, cancelable: true, clientX: 0 }));\r\n\r\n                    stage = ASSERT;\r\n                    break;\r\n                case ASSERT:\r\n                    compareStoreAndDOM_singleClick(prevSelectionEntries, expectedSelectionEntries);\r\n                    console.log('selection (single click) affects store and DOM correctly');\r\n                    if (testCaseIndex == totalTestCases) logSuccess('singleClickSelectionTest', totalTestCases);\r\n                    nextTurn(atomicTurn);\r\n                    clearInterval(timer);\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            let errMsg = 'Err: checkReactionOfSingleClickSelection(): { testCaseIndex: ' + testCaseIndex + ' } : ' + e;\r\n            console.log(errMsg);\r\n            logError(errMsg);\r\n            clearInterval(timer);\r\n        }\r\n    }, 200);\r\n}\r\n\r\nfunction checkReactionOfDoubleClickSelection(testCaseIndex, testDetails, atomicTurn, isFirstCall, totalTestCases) {\r\n    let [rowNum, colNum] = testDetails;\r\n    let cell = document.querySelector(`.row${rowNum}.col${colNum} .coverDiv`);\r\n    let myTurnNumber = getInLine(atomicTurn);\r\n    let stage = WAIT_IN_QUEUE;\r\n    let prevSelectionEntries;\r\n    let expectedSelectionEntries;\r\n    let timer = setInterval(() => {\r\n        try {\r\n            switch (stage) {\r\n                case WAIT_IN_QUEUE:\r\n                    if (atomicTurn.current == myTurnNumber) {\r\n                        if (isFirstCall) console.log('\\n--------SELECTION TEST (DOUBLE CLICK)--------------------');\r\n                        stage = ARRANGE_AND_ACTION_SINGLE_CLICK;\r\n                    }\r\n                    break;\r\n                case ARRANGE_AND_ACTION_SINGLE_CLICK:\r\n                    // arrange\r\n                    prevSelectionEntries = store.getState().selection.entries;\r\n                    expectedSelectionEntries = new Set([`${rowNum},${colNum}`])\r\n\r\n                    // action\r\n                    cell.focus();\r\n                    cell.dispatchEvent(new MouseEvent('mousedown', { bubbles: true, cancelable: true, clientX: 0 }));\r\n                    stage = ASSERT_SINGLE_CLICK;\r\n                    break;\r\n                case ASSERT_SINGLE_CLICK:\r\n                    compareStoreAndDOM_singleClick(prevSelectionEntries, expectedSelectionEntries);\r\n                    console.log('selection (single click) affects store and DOM correctly');\r\n                    stage = ACTION_DOUBLE_CLICK;\r\n                    break;\r\n                case ACTION_DOUBLE_CLICK:\r\n                    cell.dispatchEvent(new MouseEvent('dblclick', { bubbles: true, cancelable: true, clientX: 0 }));\r\n                    stage = ASSERT_DOUBLE_CLICK;\r\n                    break;\r\n                case ASSERT_DOUBLE_CLICK:\r\n                    compareStoreAndDOM_doubleClick(prevSelectionEntries, expectedSelectionEntries);\r\n                    console.log('selection (double click) affects store and DOM correctly');\r\n                    if (testCaseIndex == totalTestCases) logSuccess('doubleClickSelectionTest', totalTestCases);\r\n                    nextTurn(atomicTurn);\r\n                    clearInterval(timer);\r\n                    break;\r\n                default: break;\r\n            }\r\n        } catch (e) {\r\n            let errMsg = 'Err: checkReactionOfDoubleClickSelection(): { testCaseIndex: ' + testCaseIndex + ' } : ' + e;\r\n            console.log(errMsg);\r\n            logError(errMsg);\r\n            clearInterval(timer);\r\n        }\r\n    }, 200);\r\n}\r\n\r\nfunction compareStoreAndDOM_singleClick(prevSelectionEntries, expectedSelectionEntries) {\r\n    let currentSelectionEntries = store.getState().selection.entries;\r\n    assertCurrentSelectionEqualsExpectedSelection(currentSelectionEntries, expectedSelectionEntries);\r\n    let setDifference = getSetDifference(prevSelectionEntries, currentSelectionEntries);\r\n    assertSetDifferenceClearedOfHighlights(setDifference);\r\n    assertCurrentSelectionHighlighted(currentSelectionEntries); // different here\r\n}\r\n\r\nfunction compareStoreAndDOM_doubleClick(prevSelectionEntries, expectedSelectionEntries) {\r\n    let currentSelectionEntries = store.getState().selection.entries;\r\n    assertCurrentSelectionEqualsExpectedSelection(currentSelectionEntries, expectedSelectionEntries);\r\n    let setDifference = getSetDifference(prevSelectionEntries, currentSelectionEntries);\r\n    assertSetDifferenceClearedOfHighlights(setDifference);\r\n    assertCurrentSelectionHighlighted(currentSelectionEntries); // different here\r\n}\r\n\r\nfunction assertCurrentSelectionEqualsExpectedSelection(currentSelectionEntries, expectedSelectionEntries) {\r\n    for (const entry of currentSelectionEntries.values()) {\r\n        if (!expectedSelectionEntries.has(entry)) throw 'compareStoreAndDOM(): currentSelectionEntries has entry that expectedSelectionEntries does not have';\r\n    }\r\n    for (const entry of expectedSelectionEntries.values()) {\r\n        if (!currentSelectionEntries.has(entry)) throw 'compareStoreAndDOM(): expectedSelectionEntries has entry that currentSelectionEntries does not have';\r\n    }\r\n}\r\n\r\nfunction getSetDifference(prevSelectionEntries, currentSelectionEntries) {\r\n    let setDifference = new Set();\r\n    for (const entry of prevSelectionEntries.values()) {\r\n        if (!currentSelectionEntries.has(entry)) setDifference.add(entry);\r\n    }\r\n    return setDifference;\r\n}\r\n\r\nfunction assertSetDifferenceClearedOfHighlights(setDifference) {\r\n    for (const entry of setDifference.values()) {\r\n        let rowNum = parseInt(entry.split(',')[0], 10);\r\n        let colNum = parseInt(entry.split(',')[1], 10);\r\n        let highlightLayer = document.querySelector(`.row${rowNum}.col${colNum} .coverDiv`);\r\n        if (highlightLayer.style.boxShadow != 'none') throw 'compareStoreAndDOM(): prevSelectedCell not cleared of highlight: ' + rowNum + ' ' + colNum;\r\n    }\r\n}\r\n\r\nfunction assertCurrentSelectionHighlighted(currentSelectionEntries) {\r\n    for (const entry of currentSelectionEntries.values()) {\r\n        let rowNum = parseInt(entry.split(',')[0], 10);\r\n        let colNum = parseInt(entry.split(',')[1], 10);\r\n        let highlightLayer = document.querySelector(`.row${rowNum}.col${colNum} .coverDiv`);\r\n        if (highlightLayer.style.boxShadow != 'blue 0px 0px 0px 2px inset') throw 'compareStoreAndDOM(): currentSelectionEntry not highlighted properly ' + rowNum + ' ' + colNum;\r\n    }\r\n}\r\n\r\nexport { selectionTest, checkReactionOfSingleClickSelection, checkReactionOfDoubleClickSelection };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}