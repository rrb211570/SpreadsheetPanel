{"ast":null,"code":"import{store}from\"../../../../store/store\";import{logError,logSuccess}from\"../../../../tests/helper\";import{getInLine,nextTurn}from\"../../../../tests/sequenceHelpers\";import assembleTableData from'./helpers/assembleTableData.js';import{getRowsCols}from'./helpers/util.js';function buildSheetTest(atomicTurn,loadedSheet,rows,cols,defaultCellHeight,defaultCellWidth){var myTurnNumber=getInLine(atomicTurn);var timer;timer=setInterval(function(){try{if(atomicTurn.current==myTurnNumber){console.log('\\n--------BUILD TEST-----------------------');var tableData=assembleTableData(loadedSheet,rows,cols,defaultCellHeight,defaultCellWidth);var _ref=[store.getState().tableDimensions.totalRows,store.getState().tableDimensions.totalCols];rows=_ref[0];cols=_ref[1];// assert that all axis cells exist\nvar axisCellsX=document.querySelectorAll('.AxisX');var axisCellsY=document.querySelectorAll('.AxisY');if(axisCellsX.length!=cols||axisCellsY.length!=rows)throw'incorrect rows/cols in DOM: cols '+axisCellsX.length+' rows '+axisCellsY.length;for(var i=0;i<rows;++i){if(document.querySelectorAll(\".row\".concat(i+1,\".entryCell\")).length!=cols)throw'incorrect #entryCells for row: '+i+1;}// assert that each cell has correct value and styling\nfor(var _i=0;_i<rows;_i++){for(var j=0;j<cols;j++){var entryCell=document.querySelector(\".row\".concat(_i+1,\".col\").concat(j+1,\".entryCell\"));var entryCellData=tableData[_i][j];if(entryCell.querySelector('input').value!=entryCellData.val)throw'DOM value does not match tableData for cell: row'+(_i+1)+' col'+(j+1)+' '+entryCellData.val;for(var p=0;p<entryCellData.styleMap.length;++p){switch(entryCellData.styleMap[p][0]){case'height':if(parseInt(entryCell.style.height,10)!=entryCellData.styleMap[p][1])throw'DOM cell height does not match tableData: row'+(_i+1)+' col'+(j+1);break;case'width':if(parseInt(entryCell.style.width,10)!=entryCellData.styleMap[p][1])throw'DOM cell width does not match tableData: row'+(_i+1)+' col'+(j+1);break;case'marginLeft':if(parseInt(entryCell.style.marginLeft,10)!=entryCellData.styleMap[p][1])throw'DOM cell marginLeft does not match tableData: row'+(_i+1)+' col'+(j+1);break;default:break;}}}}console.log('buildTest successful');logSuccess('buildTest()',1);nextTurn(atomicTurn);clearInterval(timer);}}catch(e){var errMsg='Err: buildSheetTest(): '+e;console.log(errMsg);logError(errMsg);clearInterval(timer);}},100);}export default buildSheetTest;","map":{"version":3,"names":["store","logError","logSuccess","getInLine","nextTurn","assembleTableData","getRowsCols","buildSheetTest","atomicTurn","loadedSheet","rows","cols","defaultCellHeight","defaultCellWidth","myTurnNumber","timer","setInterval","current","console","log","tableData","getState","tableDimensions","totalRows","totalCols","axisCellsX","document","querySelectorAll","axisCellsY","length","i","j","entryCell","querySelector","entryCellData","value","val","p","styleMap","parseInt","style","height","width","marginLeft","clearInterval","e","errMsg"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/TablePanel/helpers/buildSheet/test.js"],"sourcesContent":["import { store } from \"../../../../store/store\";\r\nimport { logError, logSuccess } from \"../../../../tests/helper\";\r\nimport { getInLine, nextTurn } from \"../../../../tests/sequenceHelpers\";\r\nimport assembleTableData from './helpers/assembleTableData.js';\r\nimport { getRowsCols } from './helpers/util.js';\r\n\r\nfunction buildSheetTest(atomicTurn, loadedSheet, rows, cols, defaultCellHeight, defaultCellWidth) {\r\n    let myTurnNumber = getInLine(atomicTurn);\r\n    let timer;\r\n\r\n    timer = setInterval(() => {\r\n        try {\r\n            if (atomicTurn.current == myTurnNumber) {\r\n                console.log('\\n--------BUILD TEST-----------------------');\r\n                let tableData = assembleTableData(loadedSheet, rows, cols, defaultCellHeight, defaultCellWidth);\r\n                [rows, cols] = [store.getState().tableDimensions.totalRows, store.getState().tableDimensions.totalCols];\r\n\r\n                // assert that all axis cells exist\r\n                let axisCellsX = document.querySelectorAll('.AxisX');\r\n                let axisCellsY = document.querySelectorAll('.AxisY');\r\n                if (axisCellsX.length != cols || axisCellsY.length != rows) throw 'incorrect rows/cols in DOM: cols ' + axisCellsX.length + ' rows ' + axisCellsY.length;\r\n                for (let i = 0; i < rows; ++i) {\r\n                    if (document.querySelectorAll(`.row${i + 1}.entryCell`).length != cols) throw 'incorrect #entryCells for row: ' + i + 1;\r\n                }\r\n\r\n                // assert that each cell has correct value and styling\r\n                for (let i = 0; i < rows; i++) {\r\n                    for (let j = 0; j < cols; j++) {\r\n                        let entryCell = document.querySelector(`.row${i + 1}.col${j + 1}.entryCell`);\r\n                        let entryCellData = tableData[i][j];\r\n\r\n                        if (entryCell.querySelector('input').value != entryCellData.val) throw 'DOM value does not match tableData for cell: row' + (i + 1) + ' col' + (j + 1) + ' ' + entryCellData.val;\r\n\r\n                        for (let p = 0; p < entryCellData.styleMap.length; ++p) {\r\n                            switch (entryCellData.styleMap[p][0]) {\r\n                                case 'height':\r\n                                    if (parseInt(entryCell.style.height, 10) != entryCellData.styleMap[p][1]) throw 'DOM cell height does not match tableData: row' + (i + 1) + ' col' + (j + 1);\r\n                                    break;\r\n                                case 'width':\r\n                                    if (parseInt(entryCell.style.width, 10) != entryCellData.styleMap[p][1]) throw 'DOM cell width does not match tableData: row' + (i + 1) + ' col' + (j + 1);\r\n                                    break;\r\n                                case 'marginLeft':\r\n                                    if (parseInt(entryCell.style.marginLeft, 10) != entryCellData.styleMap[p][1]) throw 'DOM cell marginLeft does not match tableData: row' + (i + 1) + ' col' + (j + 1);\r\n                                    break;\r\n                                default: break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                console.log('buildTest successful');\r\n                logSuccess('buildTest()', 1);\r\n                nextTurn(atomicTurn);\r\n                clearInterval(timer);\r\n            }\r\n        } catch (e) {\r\n            let errMsg = 'Err: buildSheetTest(): ' + e;\r\n            console.log(errMsg);\r\n            logError(errMsg);\r\n            clearInterval(timer);\r\n        }\r\n    }, 100);\r\n}\r\n\r\nexport default buildSheetTest;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}