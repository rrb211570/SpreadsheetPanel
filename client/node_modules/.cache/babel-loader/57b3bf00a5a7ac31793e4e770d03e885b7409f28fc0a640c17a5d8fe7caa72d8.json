{"ast":null,"code":"function getWidth(obj) {\n  let widthPair = obj.styleMap.filter(pair => pair[0] == 'width')[0];\n  return parseInt(widthPair[1], 10);\n}\nfunction getMarginLeft(obj) {\n  let marginPair = obj.styleMap.filter(pair => pair[0] == 'marginLeft')[0];\n  return parseInt(marginPair[1], 10);\n}\nfunction getHeight(obj) {\n  let heightPair = obj.styleMap.filter(pair => pair[0] == 'height')[0];\n  return parseInt(heightPair[1], 10);\n}\nfunction getRowsCols(tableData) {\n  return [tableData.length - 1, tableData[0].length - 1];\n}\nfunction getRowWidth(tableData) {\n  let lastColCellMarginLeft = tableData[0][tableData[0].length - 1].styleMap.filter(pair => pair[0] == 'marginLeft')[0][1];\n  let lastColCellWidth = tableData[0][tableData[0].length - 1].styleMap.filter(pair => pair[0] == 'width')[0][1];\n  return lastColCellMarginLeft + lastColCellWidth;\n}\nexport { getWidth, getMarginLeft, getHeight, getRowsCols, getRowWidth };","map":{"version":3,"names":["getWidth","obj","widthPair","styleMap","filter","pair","parseInt","getMarginLeft","marginPair","getHeight","heightPair","getRowsCols","tableData","length","getRowWidth","lastColCellMarginLeft","lastColCellWidth"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/TablePanel/helpers/buildSheet/helpers/util.js"],"sourcesContent":["function getWidth(obj) {\r\n    let widthPair = obj.styleMap.filter(pair => pair[0] == 'width')[0];\r\n    return parseInt(widthPair[1], 10);\r\n}\r\n\r\nfunction getMarginLeft(obj) {\r\n    let marginPair = obj.styleMap.filter(pair => pair[0] == 'marginLeft')[0];\r\n    return parseInt(marginPair[1], 10);\r\n}\r\n\r\nfunction getHeight(obj) {\r\n    let heightPair = obj.styleMap.filter(pair => pair[0] == 'height')[0];\r\n    return parseInt(heightPair[1], 10);\r\n}\r\n\r\nfunction getRowsCols(tableData) {\r\n    return [tableData.length - 1, tableData[0].length - 1];\r\n}\r\n\r\nfunction getRowWidth(tableData) {\r\n    let lastColCellMarginLeft = tableData[0][tableData[0].length - 1].styleMap.filter(pair => pair[0] == 'marginLeft')[0][1];\r\n    let lastColCellWidth = tableData[0][tableData[0].length - 1].styleMap.filter(pair => pair[0] == 'width')[0][1];\r\n    return lastColCellMarginLeft + lastColCellWidth;\r\n}\r\n\r\nexport { getWidth, getMarginLeft, getHeight, getRowsCols, getRowWidth};"],"mappings":"AAAA,SAASA,QAAQ,CAACC,GAAG,EAAE;EACnB,IAAIC,SAAS,GAAGD,GAAG,CAACE,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;EAClE,OAAOC,QAAQ,CAACJ,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACrC;AAEA,SAASK,aAAa,CAACN,GAAG,EAAE;EACxB,IAAIO,UAAU,GAAGP,GAAG,CAACE,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EACxE,OAAOC,QAAQ,CAACE,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACtC;AAEA,SAASC,SAAS,CAACR,GAAG,EAAE;EACpB,IAAIS,UAAU,GAAGT,GAAG,CAACE,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpE,OAAOC,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACtC;AAEA,SAASC,WAAW,CAACC,SAAS,EAAE;EAC5B,OAAO,CAACA,SAAS,CAACC,MAAM,GAAG,CAAC,EAAED,SAAS,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC;AAC1D;AAEA,SAASC,WAAW,CAACF,SAAS,EAAE;EAC5B,IAAIG,qBAAqB,GAAGH,SAAS,CAAC,CAAC,CAAC,CAACA,SAAS,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC,CAACV,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxH,IAAIW,gBAAgB,GAAGJ,SAAS,CAAC,CAAC,CAAC,CAACA,SAAS,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC,CAACV,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9G,OAAOU,qBAAqB,GAAGC,gBAAgB;AACnD;AAEA,SAAShB,QAAQ,EAAEO,aAAa,EAAEE,SAAS,EAAEE,WAAW,EAAEG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}