{"ast":null,"code":"import _slicedToArray from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{compareDOM,compareStore,logError,logSuccess}from'../../../../tests/helper.js';import{getInLine,nextTurn}from'../../../../tests/sequenceHelpers.js';import{parseBoxShadow}from'../../../TablePanel/handlers/cellHandler/selectionHandler/selectionHandler.js';import{store}from'./../../../../store/store.js';import{translateToBoxShadows,updateBorders}from'./Borders.js';var WAIT_IN_QUEUE=-1;var ARRANGE=0;var ACTION_SELECT_CELL=1;var ACTION_CHANGE_BORDERS=2;var ASSERT=3;function bordersTest(turn){var changes=[[4,5,'top'],[1,2,'right'],[3,7,'bottom'],[8,2,'left'],[2,4,'top']];if(changes.length>0)checkReactionOfBorders(1,changes[0],turn,true,changes.length);for(var i=1;i<changes.length;++i)checkReactionOfBorders(i+1,changes[i],turn,false,changes.length);}function checkReactionOfBorders(testCaseIndex,testDetails,turn,isFirstCall,totalTestCases){var _testDetails=_slicedToArray(testDetails,3),selectedRowNum=_testDetails[0],selectedColNum=_testDetails[1],newBorders=_testDetails[2];var cellValueDiv=document.querySelector(\".row\".concat(selectedRowNum,\".col\").concat(selectedColNum,\">.cellValueDiv\"));var myTurnNumber=getInLine(turn);var stage=WAIT_IN_QUEUE;var prevBorders;var prevState;var prevHistoryIndex;var timer=setInterval(function(){try{switch(stage){case WAIT_IN_QUEUE:if(turn.current==myTurnNumber){if(isFirstCall)console.log('\\n--------BORDERS TEST--------------------');stage=ARRANGE;}break;case ARRANGE:var history=store.getState().history;// arrange\nprevBorders=parseBoxShadow(cellValueDiv.style.boxShadow);prevState=history.changeHistory[history.changeHistoryIndex];prevHistoryIndex=history.changeHistoryIndex;case ACTION_SELECT_CELL:// select cell\nvar cell=document.querySelector(\".row\".concat(selectedRowNum,\".col\").concat(selectedColNum,\" .coverDiv\"));cell.dispatchEvent(new MouseEvent('mousedown',{bubbles:true,cancelable:true,clientX:0}));stage=ACTION_CHANGE_BORDERS;break;case ACTION_CHANGE_BORDERS:var selectionEntries=store.getState().selection.entries;updateBorders(selectionEntries,prevBorders,newBorders);stage=ASSERT;break;case ASSERT:var prevPropertyObj={borders:prevBorders};var propertyObj={borders:newBorders};var propertyObjDOM={borders:translateToBoxShadows([newBorders])};compareDOM(selectedRowNum,selectedColNum,propertyObjDOM);compareStore(selectedRowNum,selectedColNum,prevPropertyObj,propertyObj,prevState,prevHistoryIndex);console.log('borders affects store and DOM correctly');if(testCaseIndex==totalTestCases)logSuccess('bordersTest()',totalTestCases);nextTurn(turn);clearInterval(timer);break;}}catch(e){var errMsg='Err: checkReactionOfBorders(): { testCaseIndex: '+testCaseIndex+', rowNum: '+selectedRowNum+', colNum: '+selectedColNum+', newBorders: '+newBorders+' } :\\n'+e;console.log(errMsg);logError(errMsg);clearInterval(timer);}},200);}export{bordersTest,checkReactionOfBorders};","map":{"version":3,"names":["compareDOM","compareStore","logError","logSuccess","getInLine","nextTurn","parseBoxShadow","store","translateToBoxShadows","updateBorders","WAIT_IN_QUEUE","ARRANGE","ACTION_SELECT_CELL","ACTION_CHANGE_BORDERS","ASSERT","bordersTest","turn","changes","length","checkReactionOfBorders","i","testCaseIndex","testDetails","isFirstCall","totalTestCases","selectedRowNum","selectedColNum","newBorders","cellValueDiv","document","querySelector","myTurnNumber","stage","prevBorders","prevState","prevHistoryIndex","timer","setInterval","current","console","log","history","getState","style","boxShadow","changeHistory","changeHistoryIndex","cell","dispatchEvent","MouseEvent","bubbles","cancelable","clientX","selectionEntries","selection","entries","prevPropertyObj","borders","propertyObj","propertyObjDOM","clearInterval","e","errMsg"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/FormatPanel/components/Borders/test.js"],"sourcesContent":["import { compareDOM, compareStore, logError, logSuccess } from '../../../../tests/helper.js';\r\nimport { getInLine, nextTurn } from '../../../../tests/sequenceHelpers.js'\r\nimport { parseBoxShadow } from '../../../TablePanel/handlers/cellHandler/selectionHandler/selectionHandler.js';\r\nimport { store } from './../../../../store/store.js'\r\nimport { translateToBoxShadows, updateBorders } from './Borders.js';\r\n\r\nconst WAIT_IN_QUEUE = -1;\r\nconst ARRANGE = 0;\r\nconst ACTION_SELECT_CELL = 1\r\nconst ACTION_CHANGE_BORDERS = 2;\r\nconst ASSERT = 3;\r\n\r\nfunction bordersTest(turn) {\r\n    let changes = [[4, 5, 'top'], [1, 2, 'right'], [3, 7, 'bottom'], [8, 2, 'left'], [2, 4, 'top']];\r\n    if (changes.length > 0) checkReactionOfBorders(1, changes[0], turn, true, changes.length);\r\n    for (let i = 1; i < changes.length; ++i) checkReactionOfBorders(i + 1, changes[i], turn, false, changes.length);\r\n}\r\n\r\nfunction checkReactionOfBorders(testCaseIndex, testDetails, turn, isFirstCall, totalTestCases) {\r\n    let [selectedRowNum, selectedColNum, newBorders] = testDetails;\r\n    let cellValueDiv = document.querySelector(`.row${selectedRowNum}.col${selectedColNum}>.cellValueDiv`);\r\n    let myTurnNumber = getInLine(turn);\r\n    let stage = WAIT_IN_QUEUE;\r\n    let prevBorders;\r\n    let prevState;\r\n    let prevHistoryIndex;\r\n    let timer = setInterval(() => {\r\n        try {\r\n            switch (stage) {\r\n                case WAIT_IN_QUEUE:\r\n                    if (turn.current == myTurnNumber) {\r\n                        if (isFirstCall) console.log('\\n--------BORDERS TEST--------------------');\r\n                        stage = ARRANGE;\r\n                    }\r\n                    break;\r\n                case ARRANGE:\r\n                    let history = store.getState().history;\r\n                    // arrange\r\n                    prevBorders = parseBoxShadow(cellValueDiv.style.boxShadow);\r\n                    prevState = history.changeHistory[history.changeHistoryIndex];\r\n                    prevHistoryIndex = history.changeHistoryIndex;\r\n                case ACTION_SELECT_CELL:\r\n                    // select cell\r\n                    let cell = document.querySelector(`.row${selectedRowNum}.col${selectedColNum} .coverDiv`);\r\n                    cell.dispatchEvent(new MouseEvent('mousedown', { bubbles: true, cancelable: true, clientX: 0 }));\r\n                    stage = ACTION_CHANGE_BORDERS;\r\n                    break;\r\n                case ACTION_CHANGE_BORDERS:\r\n                    let selectionEntries = store.getState().selection.entries;\r\n                    updateBorders(selectionEntries, prevBorders, newBorders);\r\n                    stage = ASSERT;\r\n                    break;\r\n                case ASSERT:\r\n                    let prevPropertyObj = { borders: prevBorders };\r\n                    let propertyObj = { borders: newBorders };\r\n                    let propertyObjDOM = { borders: translateToBoxShadows([newBorders]) };\r\n                    compareDOM(selectedRowNum, selectedColNum, propertyObjDOM);\r\n                    compareStore(selectedRowNum, selectedColNum, prevPropertyObj, propertyObj, prevState, prevHistoryIndex);\r\n                    console.log('borders affects store and DOM correctly');\r\n                    if (testCaseIndex == totalTestCases) logSuccess('bordersTest()', totalTestCases);\r\n                    nextTurn(turn);\r\n                    clearInterval(timer);\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            let errMsg = 'Err: checkReactionOfBorders(): { testCaseIndex: ' + testCaseIndex + ', rowNum: ' + selectedRowNum + ', colNum: ' + selectedColNum + ', newBorders: ' + newBorders + ' } :\\n' + e;\r\n            console.log(errMsg);\r\n            logError(errMsg);\r\n            clearInterval(timer);\r\n        }\r\n    }, 200);\r\n}\r\n\r\nexport { bordersTest, checkReactionOfBorders };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}