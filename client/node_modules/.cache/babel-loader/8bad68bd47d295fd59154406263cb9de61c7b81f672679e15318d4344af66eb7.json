{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rband\\\\Desktop\\\\SpreadsheetPanel\\\\client\\\\src\\\\components\\\\CellViewPanel\\\\CellViewPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { getSelectionEntries } from '../../store/reducers/selectionSlice.js';\nimport './CellViewPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CellViewPanel() {\n  _s();\n  const selectionEntries = useSelector(getSelectionEntries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"cellViewPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"cellViewPanel__cellAddress\",\n        children: getAddress(selectionEntries)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"cellViewPanel__divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"cellViewPanel__cellTextValue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(CellViewPanel, \"7sE2YT5FhSAdic+U/SLo4fjt2zA=\", false, function () {\n  return [useSelector];\n});\n_c = CellViewPanel;\nfunction getAddress(selectedEntries) {\n  let cell = selectedEntries.values().next().value;\n  let [rowNum, colNum] = cell.split(',');\n  let letter = String.fromCharCode(parseInt(colNum, 10) % 26 + 64);\n  return letter + rowNum;\n}\nexport default CellViewPanel;\nvar _c;\n$RefreshReg$(_c, \"CellViewPanel\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","getSelectionEntries","CellViewPanel","selectionEntries","width","display","justifyContent","alignItems","getAddress","selectedEntries","cell","values","next","value","rowNum","colNum","split","letter","String","fromCharCode","parseInt"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/CellViewPanel/CellViewPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { getSelectionEntries } from '../../store/reducers/selectionSlice.js';\r\nimport './CellViewPanel.css'\r\n\r\nfunction CellViewPanel() {\r\n    const selectionEntries = useSelector(getSelectionEntries);\r\n\r\n    return (\r\n        <div id='cellViewPanel'>\r\n            <div style={{ width: '70px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <p id='cellViewPanel__cellAddress'>{getAddress(selectionEntries)}</p>\r\n                <p id='cellViewPanel__divider'></p>\r\n            </div>\r\n            <p id='cellViewPanel__cellTextValue'></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getAddress(selectedEntries) {\r\n    let cell = selectedEntries.values().next().value;\r\n    let [rowNum, colNum] = cell.split(',');\r\n    let letter = String.fromCharCode(parseInt(colNum, 10) % 26 + 64);\r\n    return letter + rowNum;\r\n}\r\n\r\nexport default CellViewPanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,mBAAmB,QAAQ,wCAAwC;AAC5E,OAAO,qBAAqB;AAAA;AAE5B,SAASC,aAAa,GAAG;EAAA;EACrB,MAAMC,gBAAgB,GAAGH,WAAW,CAACC,mBAAmB,CAAC;EAEzD,oBACI;IAAK,EAAE,EAAC,eAAe;IAAA,wBACnB;MAAK,KAAK,EAAE;QAAEG,KAAK,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAA,wBAClG;QAAG,EAAE,EAAC,4BAA4B;QAAA,UAAEC,UAAU,CAACL,gBAAgB;MAAC;QAAA;QAAA;QAAA;MAAA,QAAK,eACrE;QAAG,EAAE,EAAC;MAAwB;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC,eACN;MAAG,EAAE,EAAC;IAA8B;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACvC;AAEd;AAAC,GAZQD,aAAa;EAAA,QACOF,WAAW;AAAA;AAAA,KAD/BE,aAAa;AActB,SAASM,UAAU,CAACC,eAAe,EAAE;EACjC,IAAIC,IAAI,GAAGD,eAAe,CAACE,MAAM,EAAE,CAACC,IAAI,EAAE,CAACC,KAAK;EAChD,IAAI,CAACC,MAAM,EAAEC,MAAM,CAAC,GAAGL,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC;EACtC,IAAIC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAACC,QAAQ,CAACL,MAAM,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;EAChE,OAAOE,MAAM,GAAGH,MAAM;AAC1B;AAEA,eAAeZ,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}