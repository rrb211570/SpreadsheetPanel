{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rband\\\\Desktop\\\\SpreadsheetPanel\\\\client\\\\src\\\\components\\\\TablePanel\\\\TablePanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport loadedSheet from '../SpreadSheetPanel/SpreadSheetPanel.js';\nimport { buildSheet, AxisX, AxisY, table } from './helpers/buildSheet/buildSheet.js';\nimport { applyResizers } from './handlers/resizingHandler/resizingHandler.js';\nimport applyCellHandlers from './handlers/cellHandler/cellHandler.js';\nimport { applyScrollSnapHandlers } from './handlers/scrollSnapHandler/scrollSnapHandler.js';\nimport { batchTurn, testSequence } from '../../tests/sequenceHelpers.js';\nimport unitTest from './tests/unitTest.js';\nimport './TablePanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TablePanel(props) {\n  _s();\n  let {\n    rows,\n    cols,\n    rowHeight,\n    colWidth\n  } = props;\n  let [tableHeight, tableWidth] = buildSheet(loadedSheet, parseInt(rows, 10), parseInt(cols, 10), parseInt(rowHeight, 10), parseInt(colWidth, 10));\n  const [sheetAxisX, setSheetAxisX] = useState(AxisX);\n  const [sheetAxisY, setSheetAxisY] = useState(AxisY);\n  const [sheetTable, setSheetTable] = useState(table);\n  useEffect(() => {\n    applyResizers(); // resizers.js\n    applyCellHandlers();\n    applyScrollSnapHandlers();\n    let loadTimer = setInterval(() => {\n      if (loadedSheet != null) {\n        buildSheet(loadedSheet, parseInt(rows, 10), parseInt(cols, 10), parseInt(rowHeight, 10), parseInt(colWidth, 10));\n        setSheetAxisX(AxisX);\n        setSheetAxisY(AxisY);\n        setSheetTable(table);\n        clearInterval(loadTimer);\n      }\n    }, 500);\n    let timer = setInterval(() => {\n      if (batchTurn.current == testSequence.get('TablePanel').turnNumber) {\n        unitTest(testSequence.get('TablePanel').tests, loadedSheet, rows, cols, rowHeight, colWidth);\n        clearInterval(timer);\n      }\n    }, 500);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tableDiv\",\n    tabIndex: \"-1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table\",\n      style: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row0 col0 origin\",\n        style: {\n          height: '22px',\n          width: '50px',\n          boxShadow: 'inset -4px -4px 0 1px #ACACAC',\n          zIndex: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), sheetAxisX, sheetAxisY, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tableEntryCellsWindow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"scrollBarLayer\",\n          style: {\n            width: tableWidth - 50 + 'px',\n            height: tableHeight - 22 + 'px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tableEntryCells\",\n        style: {\n          position: 'relative',\n          height: 'calc(100% - 38px)',\n          width: 'calc(100% - 50px - 18px)',\n          marginLeft: '50px',\n          marginTop: '22px',\n          overflow: 'hidden'\n        },\n        children: sheetTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(TablePanel, \"GzjKuG71nGyUDUdmSrm39bNkOZk=\");\n_c = TablePanel;\nexport default _c2 = /*#__PURE__*/React.memo(TablePanel);\nvar _c, _c2;\n$RefreshReg$(_c, \"TablePanel\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","loadedSheet","buildSheet","AxisX","AxisY","table","applyResizers","applyCellHandlers","applyScrollSnapHandlers","batchTurn","testSequence","unitTest","TablePanel","props","rows","cols","rowHeight","colWidth","tableHeight","tableWidth","parseInt","sheetAxisX","setSheetAxisX","sheetAxisY","setSheetAxisY","sheetTable","setSheetTable","loadTimer","setInterval","clearInterval","timer","current","get","turnNumber","tests","position","height","width","boxShadow","zIndex","marginLeft","marginTop","overflow","memo"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/TablePanel/TablePanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport loadedSheet from '../SpreadSheetPanel/SpreadSheetPanel.js';\r\nimport { buildSheet, AxisX, AxisY, table } from './helpers/buildSheet/buildSheet.js'\r\nimport { applyResizers } from './handlers/resizingHandler/resizingHandler.js'\r\nimport applyCellHandlers from './handlers/cellHandler/cellHandler.js';\r\nimport { applyScrollSnapHandlers } from './handlers/scrollSnapHandler/scrollSnapHandler.js';\r\nimport { batchTurn, testSequence } from '../../tests/sequenceHelpers.js';\r\nimport unitTest from './tests/unitTest.js';\r\nimport './TablePanel.css';\r\n\r\nfunction TablePanel(props) {\r\n    let { rows, cols, rowHeight, colWidth } = props;\r\n    let [tableHeight, tableWidth] = buildSheet(loadedSheet, parseInt(rows, 10), parseInt(cols, 10), parseInt(rowHeight, 10), parseInt(colWidth, 10))\r\n    const [sheetAxisX, setSheetAxisX] = useState(AxisX);\r\n    const [sheetAxisY, setSheetAxisY] = useState(AxisY);\r\n    const [sheetTable, setSheetTable] = useState(table);\r\n\r\n    useEffect(() => {\r\n        applyResizers(); // resizers.js\r\n        applyCellHandlers();\r\n        applyScrollSnapHandlers();\r\n\r\n        let loadTimer = setInterval(() => {\r\n            if (loadedSheet != null) {\r\n                buildSheet(loadedSheet, parseInt(rows, 10), parseInt(cols, 10), parseInt(rowHeight, 10), parseInt(colWidth, 10));\r\n                setSheetAxisX(AxisX);\r\n                setSheetAxisY(AxisY);\r\n                setSheetTable(table);\r\n                clearInterval(loadTimer);\r\n            }\r\n        }, 500);\r\n\r\n        let timer = setInterval(() => {\r\n            if (batchTurn.current == testSequence.get('TablePanel').turnNumber) {\r\n                unitTest(testSequence.get('TablePanel').tests, loadedSheet, rows, cols, rowHeight, colWidth);\r\n                clearInterval(timer);\r\n            }\r\n        }, 500);\r\n    }, []);\r\n\r\n    return (\r\n        <div id='tableDiv' tabIndex='-1'>\r\n            <div id='table' style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n                <div className='row0 col0 origin' style={{ height: '22px', width: '50px', boxShadow: 'inset -4px -4px 0 1px #ACACAC', zIndex: 4 }}></div>\r\n                {sheetAxisX}\r\n                {sheetAxisY}\r\n                <div id='tableEntryCellsWindow'>\r\n                    <div id='scrollBarLayer' style={{ width: tableWidth - 50 + 'px', height: tableHeight - 22 + 'px' }}></div>\r\n                </div>\r\n                <div id='tableEntryCells' style={{ position: 'relative', height: 'calc(100% - 38px)', width: 'calc(100% - 50px - 18px)', marginLeft: '50px', marginTop: '22px', overflow: 'hidden' }}>\r\n                    {sheetTable}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(TablePanel);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}