{"ast":null,"code":"function assembleTableData(loadedSheet, rows, cols, defaultCellHeight, defaultCellWidth) {\n  let tableData = createEmptyTable(rows, cols);\n  loadTableData(loadedSheet, tableData, rows, cols, defaultCellHeight, defaultCellWidth);\n  return tableData;\n}\nfunction createEmptyTable(rows, cols) {\n  let tableData = [];\n  for (let i = 0; i < rows; ++i) {\n    let emptyRow = [];\n    for (let j = 0; j < cols; ++j) emptyRow.push({});\n    tableData.push(emptyRow);\n  }\n  return tableData;\n}\nfunction loadTableData(loadedSheet, tableData, rows, cols, defaultCellHeight, defaultCellWidth) {\n  if (loadedSheet != null && loadedSheet.hasOwnProperty('data')) {\n    loadWithCellData(loadedSheet, tableData);\n    loadWithGroupData(loadedSheet, tableData, defaultCellWidth);\n  }\n  applyDefaults(tableData, rows, cols, defaultCellHeight, defaultCellWidth);\n  calculateAndApplyMarginLefts(tableData, rows, cols);\n}\nfunction loadWithCellData(loadedSheet, tableData) {\n  // cellData does not affect axes\n  if (loadedSheet.data.hasOwnProperty('individualData')) {\n    for (const individual of loadedSheet.data.individualData) {\n      if (individual.entryKey != 'spreadsheet' && !/.col\\d+/.test(individual.entryKey)) {\n        let rowNum = parseInt(individual.row, 10);\n        tableData[rowNum][0].styleMap = individual.hasOwnProperty('styleMap') ? individual.styleMap : [];\n      } else if (/.col\\d+/.test(individual.entryKey)) {\n        let colNum = parseInt(individual.col, 10);\n        let rowNum = parseInt(individual.row, 10);\n        tableData[rowNum][colNum].val = individual.val;\n        tableData[rowNum][colNum].styleMap = individual.hasOwnProperty('styleMap') ? individual.styleMap : [];\n      }\n    }\n  }\n}\nfunction loadWithGroupData(loadedSheet, tableData, defaultCellWidth) {\n  if (loadedSheet.data.hasOwnProperty('groupData')) {\n    for (const group of loadedSheet.data.groupData) {\n      if (/^.col\\d+$/.test(group.groupName) && group.hasOwnProperty('styleMap')) {\n        let colNum = parseInt(group.groupName.match(/.col(\\d+)/)[1], 10);\n        let widthPair = group.styleMap.filter(pair => pair[0] == 'width');\n        // set provided groupData for colNum\n        for (let i = 0; i < tableData.length; ++i) {\n          if (!tableData[i][colNum + 1].hasOwnProperty('styleMap')) tableData[i][colNum + 1].styleMap = [];\n          if (i == 0) {\n            // add width and other stylePairs\n            if (widthPair.length != 0) tableData[i][colNum + 1].styleMap.push(widthPair[0]);\n          } else tableData[i][colNum + 1].styleMap.push(...group.styleMap);\n          // if width property in groupData, set marginLeft for every col thereafter\n          if (widthPair.length != 0) {\n            let dx = parseInt(widthPair[0][1], 10) - defaultCellWidth; // dx for existing/default marginLeft\n            for (let j = 1 + colNum + 1; j < tableData[0].length; ++j) {\n              if (!tableData[i][j].hasOwnProperty('styleMap')) tableData[i][j].styleMap = [];\n              let alignPair = tableData[i][j].styleMap.filter(pair => pair[0] == 'marginLeft');\n              if (alignPair.length != 0) {\n                // existing marginLeft\n                tableData[i][j].styleMap = updateMarginLeftInStyleMap(tableData[i][j].styleMap, dx);\n              } else {\n                // default marginLeft\n                tableData[i][j].styleMap.push(['marginLeft', defaultCellWidth * (j - 2) + defaultCellWidth / 2 + dx]);\n              }\n            }\n          }\n        }\n      } else if (/^.row\\d+$/.test(group.groupName) && group.hasOwnProperty('styleMap')) {\n        let rowNum = parseInt(group.groupName.match(/.row(\\d+)/)[1], 10);\n        let heightPair = group.styleMap.filter(pair => pair[0] == 'height');\n        if (heightPair.length != 0) {\n          if (!tableData[rowNum][0].hasOwnProperty('styleMap')) tableData[rowNum][0].styleMap = [];\n          if (!tableData[rowNum][1].hasOwnProperty('styleMap')) tableData[rowNum][1].styleMap = [];\n          tableData[rowNum][0].styleMap = [heightPair[0]];\n          tableData[rowNum][1].styleMap = [heightPair[0]];\n        }\n        for (let i = 2; i < tableData[rowNum].length; ++i) {\n          if (!tableData[rowNum][i].hasOwnProperty('styleMap')) tableData[rowNum][i].styleMap = [];\n          tableData[rowNum][i].styleMap.push(...group.styleMap);\n        }\n      }\n    }\n  }\n}\nfunction updateMarginLeftInStyleMap(styleMap, dx) {\n  return styleMap.map(pair => pair[0] == 'marginLeft' ? [pair[0], parseInt(pair[1], 10) + dx] : pair);\n}\n\n// apply default value, height, and width\nfunction applyDefaults(tableData, rows, cols, defaultCellHeight, defaultCellWidth) {\n  for (let i = 0; i < rows; ++i) {\n    for (let j = 0; j < cols; ++j) {\n      let entry = tableData[i][j];\n      if (!entry.hasOwnProperty('val')) entry.val = '';\n      if (!entry.hasOwnProperty('styleMap')) {\n        entry.styleMap = [];\n        entry.styleMap.push(['height', defaultCellHeight]);\n        entry.styleMap.push(['width', defaultCellWidth]);\n      } else {\n        let heightPair = entry.styleMap.filter(pair => pair[0] == 'height');\n        let widthPair = entry.styleMap.filter(pair => pair[0] == 'width');\n        if (heightPair.length == 0) entry.styleMap.push(['height', defaultCellHeight]);\n        if (widthPair.length == 0) entry.styleMap.push(['width', defaultCellWidth]);\n      }\n      tableData[i][j] = entry;\n    }\n  }\n}\nfunction calculateAndApplyMarginLefts(tableData, rows, cols) {\n  let margins = getTopAxisMargins(tableData);\n  for (let i = 0; i < rows; ++i) {\n    for (let j = 0; j < cols; ++j) {\n      let entry = tableData[i][j];\n      entry.styleMap.push(['marginLeft', margins[j]]);\n      tableData[i][j] = entry;\n    }\n  }\n}\nfunction getTopAxisMargins(tableData) {\n  let margins = [0];\n  for (let j = 1; j < tableData[0].length; ++j) {\n    let priorEntry = tableData[0][j - 1];\n    let priorEntryWidth = priorEntry.styleMap.filter(pair => pair[0] == 'width')[0][1];\n    margins.push(margins[margins.length - 1] + priorEntryWidth);\n  }\n  return margins;\n}\nexport default assembleTableData;","map":{"version":3,"names":["assembleTableData","loadedSheet","rows","cols","defaultCellHeight","defaultCellWidth","tableData","createEmptyTable","loadTableData","i","emptyRow","j","push","hasOwnProperty","loadWithCellData","loadWithGroupData","applyDefaults","calculateAndApplyMarginLefts","data","individual","individualData","entryKey","test","rowNum","parseInt","row","styleMap","colNum","col","val","group","groupData","groupName","match","widthPair","filter","pair","length","dx","alignPair","updateMarginLeftInStyleMap","heightPair","map","entry","margins","getTopAxisMargins","priorEntry","priorEntryWidth"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/TablePanel/helpers/buildSheet/helpers/assembleTableData.js"],"sourcesContent":["function assembleTableData(loadedSheet, rows, cols, defaultCellHeight, defaultCellWidth) {\r\n    let tableData = createEmptyTable(rows, cols);\r\n    loadTableData(loadedSheet, tableData, rows, cols, defaultCellHeight, defaultCellWidth);\r\n    return tableData;\r\n}\r\n\r\nfunction createEmptyTable(rows, cols) {\r\n    let tableData = [];\r\n    for (let i = 0; i < rows; ++i) {\r\n        let emptyRow = [];\r\n        for (let j = 0; j < cols; ++j) emptyRow.push({});\r\n        tableData.push(emptyRow);\r\n    }\r\n    return tableData;\r\n}\r\n\r\nfunction loadTableData(loadedSheet, tableData, rows, cols, defaultCellHeight, defaultCellWidth) {\r\n    if (loadedSheet != null && loadedSheet.hasOwnProperty('data')) {\r\n        loadWithCellData(loadedSheet, tableData);\r\n        loadWithGroupData(loadedSheet, tableData, defaultCellWidth);\r\n    }\r\n    applyDefaults(tableData, rows, cols, defaultCellHeight, defaultCellWidth);\r\n    calculateAndApplyMarginLefts(tableData, rows, cols);\r\n}\r\n\r\nfunction loadWithCellData(loadedSheet, tableData) { // cellData does not affect axes\r\n    if (loadedSheet.data.hasOwnProperty('individualData')) {\r\n        for (const individual of loadedSheet.data.individualData) {\r\n            if (individual.entryKey != 'spreadsheet' && !/.col\\d+/.test(individual.entryKey)) {\r\n                let rowNum = parseInt(individual.row, 10);\r\n                tableData[rowNum][0].styleMap = individual.hasOwnProperty('styleMap') ?\r\n                    individual.styleMap : [];\r\n            } else if (/.col\\d+/.test(individual.entryKey)) {\r\n                let colNum = parseInt(individual.col, 10);\r\n                let rowNum = parseInt(individual.row, 10);\r\n                tableData[rowNum][colNum].val = individual.val;\r\n                tableData[rowNum][colNum].styleMap = individual.hasOwnProperty('styleMap') ?\r\n                    individual.styleMap : [];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadWithGroupData(loadedSheet, tableData, defaultCellWidth) {\r\n    if (loadedSheet.data.hasOwnProperty('groupData')) {\r\n        for (const group of loadedSheet.data.groupData) {\r\n            if (/^.col\\d+$/.test(group.groupName) && group.hasOwnProperty('styleMap')) {\r\n                let colNum = parseInt(group.groupName.match(/.col(\\d+)/)[1], 10);\r\n                let widthPair = group.styleMap.filter(pair => pair[0] == 'width');\r\n                // set provided groupData for colNum\r\n                for (let i = 0; i < tableData.length; ++i) {\r\n                    if (!tableData[i][colNum + 1].hasOwnProperty('styleMap')) tableData[i][colNum + 1].styleMap = [];\r\n                    if (i == 0) { // add width and other stylePairs\r\n                        if (widthPair.length != 0) tableData[i][colNum + 1].styleMap.push(widthPair[0]);\r\n                    } else tableData[i][colNum + 1].styleMap.push(...group.styleMap);\r\n                    // if width property in groupData, set marginLeft for every col thereafter\r\n                    if (widthPair.length != 0) {\r\n                        let dx = parseInt(widthPair[0][1], 10) - defaultCellWidth; // dx for existing/default marginLeft\r\n                        for (let j = 1 + colNum + 1; j < tableData[0].length; ++j) {\r\n                            if (!tableData[i][j].hasOwnProperty('styleMap')) tableData[i][j].styleMap = [];\r\n                            let alignPair = tableData[i][j].styleMap.filter(pair => pair[0] == 'marginLeft');\r\n                            if (alignPair.length != 0) { // existing marginLeft\r\n                                tableData[i][j].styleMap = updateMarginLeftInStyleMap(tableData[i][j].styleMap, dx);\r\n                            } else { // default marginLeft\r\n                                tableData[i][j].styleMap.push(['marginLeft', defaultCellWidth * (j - 2) + defaultCellWidth / 2 + dx]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (/^.row\\d+$/.test(group.groupName) && group.hasOwnProperty('styleMap')) {\r\n                let rowNum = parseInt(group.groupName.match(/.row(\\d+)/)[1], 10);\r\n                let heightPair = group.styleMap.filter(pair => pair[0] == 'height');\r\n                if (heightPair.length != 0) {\r\n                    if (!tableData[rowNum][0].hasOwnProperty('styleMap')) tableData[rowNum][0].styleMap = [];\r\n                    if (!tableData[rowNum][1].hasOwnProperty('styleMap')) tableData[rowNum][1].styleMap = [];\r\n                    tableData[rowNum][0].styleMap = [heightPair[0]];\r\n                    tableData[rowNum][1].styleMap = [heightPair[0]];\r\n                }\r\n                for (let i = 2; i < tableData[rowNum].length; ++i) {\r\n                    if (!tableData[rowNum][i].hasOwnProperty('styleMap')) tableData[rowNum][i].styleMap = []; tableData[rowNum][i].styleMap.push(...group.styleMap);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateMarginLeftInStyleMap(styleMap, dx) {\r\n    return styleMap.map(pair => pair[0] == 'marginLeft' ?\r\n        [pair[0], parseInt(pair[1], 10) + dx] : pair);\r\n}\r\n\r\n// apply default value, height, and width\r\nfunction applyDefaults(tableData, rows, cols, defaultCellHeight, defaultCellWidth) {\r\n    for (let i = 0; i < rows; ++i) {\r\n        for (let j = 0; j < cols; ++j) {\r\n            let entry = tableData[i][j];\r\n            if (!entry.hasOwnProperty('val')) entry.val = '';\r\n            if (!entry.hasOwnProperty('styleMap')) {\r\n                entry.styleMap = [];\r\n                entry.styleMap.push(['height', defaultCellHeight]);\r\n                entry.styleMap.push(['width', defaultCellWidth]);\r\n            } else {\r\n                let heightPair = entry.styleMap.filter(pair => pair[0] == 'height');\r\n                let widthPair = entry.styleMap.filter(pair => pair[0] == 'width');\r\n                if (heightPair.length == 0) entry.styleMap.push(['height', defaultCellHeight]);\r\n                if (widthPair.length == 0) entry.styleMap.push(['width', defaultCellWidth]);\r\n            }\r\n            tableData[i][j] = entry;\r\n        }\r\n    }\r\n}\r\n\r\nfunction calculateAndApplyMarginLefts(tableData, rows, cols) {\r\n    let margins = getTopAxisMargins(tableData);\r\n    for (let i = 0; i < rows; ++i) {\r\n        for (let j = 0; j < cols; ++j) {\r\n            let entry = tableData[i][j];\r\n            entry.styleMap.push(['marginLeft', margins[j]]);\r\n            tableData[i][j] = entry;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getTopAxisMargins(tableData) {\r\n    let margins = [0];\r\n    for (let j = 1; j < tableData[0].length; ++j) {\r\n        let priorEntry = tableData[0][j - 1];\r\n        let priorEntryWidth = priorEntry.styleMap.filter(pair => pair[0] == 'width')[0][1];\r\n        margins.push(margins[margins.length - 1] + priorEntryWidth);\r\n    }\r\n    return margins;\r\n}\r\n\r\nexport default assembleTableData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}