{"ast":null,"code":"import _toConsumableArray from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/rband/Desktop/SpreadsheetPanel/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import TestConsolePanel from'../TestConsolePanel/TestConsolePanel.js';import React from'react';import{batchTurn,concludeAllTests,concludeAllTestsWhenDone,testSequence}from'../../tests/sequenceHelpers.js';import unitTest from'./tests/unitTest.js';import appTest from'./tests/appTest.js';import{loadSheetAPI,saveAPI}from'./helpers/API.js';import{keyPressed,keyUpped}from'./handlers/keyboardEvents/keyboardEvents.js';import TablePanel from'../TablePanel/TablePanel.js';import FormatPanel from'../FormatPanel/FormatPanel.js';import'./SpreadSheetPanel.css';import CellViewPanel from'../CellViewPanel/CellViewPanel.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var loadedSheet=null;// our only global variable\nvar SpreadSheetPanel=/*#__PURE__*/function(_React$Component){_inherits(SpreadSheetPanel,_React$Component);var _super=_createSuper(SpreadSheetPanel);function SpreadSheetPanel(props){var _this;_classCallCheck(this,SpreadSheetPanel);_this=_super.call(this,props);_this.state={sheetID:null,// get_URL_parameter(id)\nautoSaveTimer:null,title:'Untitled'};_this.setAutoSaveInterval=_this.setAutoSaveInterval.bind(_assertThisInitialized(_this));_this.hasSavePayload=_this.hasSavePayload.bind(_assertThisInitialized(_this));return _this;}_createClass(SpreadSheetPanel,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"content\",id:\"contentID\",style:{height:parseInt(window.innerHeight,10)-66+'px',width:'100%'},children:[/*#__PURE__*/_jsx(TestConsolePanel,{}),/*#__PURE__*/_jsxs(\"div\",{id:\"spreadsheet\",tabIndex:\"-1\",onKeyDown:keyPressed,onKeyUp:keyUpped,children:[/*#__PURE__*/_jsx(FormatPanel,{}),/*#__PURE__*/_jsx(CellViewPanel,{}),/*#__PURE__*/_jsx(TablePanel,{rows:this.props.rows,cols:this.props.cols,rowHeight:this.props.rowHeight,colWidth:this.props.colWidth})]})]});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.props.storageURL!=null){loadSheetAPI(this.state.sheetID,this.props.storageURL).then(function(res){console.log(res);if(res.status=='success'){var autoSaveInterval=_this2.setAutoSaveInterval();_this2.setState({autoSaveInterval:autoSaveInterval});loadedSheet=res;document.querySelector('#back').removeAttribute('disabled');document.querySelector('#logout').removeAttribute('disabled');}else{if(res.status=='fail'){if(res.reason=='missing token')_this2.props.nav('/');if(res.reason=='sheetID does not exist')_this2.props.nav('/sheets');}}}).catch(function(err){console.log('Error: loadSheetAPI(): '+err);clearInterval(_this2.state.autoSaveTimer);_this2.props.nav('/');});}var timer=setInterval(function(){if(batchTurn.current==testSequence.get('SpreadSheetPanel').turnNumber){unitTest(testSequence.get('SpreadSheetPanel').tests);clearInterval(timer);}},500);var timer2=setInterval(function(){if(batchTurn.current==testSequence.get('App').turnNumber){appTest(testSequence.get('App').tests);clearInterval(timer2);}});concludeAllTestsWhenDone();}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;// prevent re-renders from changes to Redux\n}},{key:\"setAutoSaveInterval\",value:function setAutoSaveInterval(){var _this3=this;return setInterval(function(){console.log('autoSave()');if(_this3.hasSavePayload()){saveAPI(_this3.state.sheetID,_this3.props.storageURL).then(function(res){if(res.status=='success'){console.log(res.dat);_this3.props.save();}else console.log('autoSave failed');}).catch(function(err){console.log('saveError: '+err);clearInterval(_this3.state.autoSaveInterval);});}},3000);}},{key:\"hasSavePayload\",value:function hasSavePayload(){return _toConsumableArray(this.props.collectedData.getIndividualEntries()).length!=0||_toConsumableArray(this.props.collectedData.getGroupEntries()).length!=0;}}]);return SpreadSheetPanel;}(React.Component);export default SpreadSheetPanel;","map":{"version":3,"names":["TestConsolePanel","React","batchTurn","concludeAllTests","concludeAllTestsWhenDone","testSequence","unitTest","appTest","loadSheetAPI","saveAPI","keyPressed","keyUpped","TablePanel","FormatPanel","CellViewPanel","loadedSheet","SpreadSheetPanel","props","state","sheetID","autoSaveTimer","title","setAutoSaveInterval","bind","hasSavePayload","height","parseInt","window","innerHeight","width","rows","cols","rowHeight","colWidth","storageURL","then","res","console","log","status","autoSaveInterval","setState","document","querySelector","removeAttribute","reason","nav","catch","err","clearInterval","timer","setInterval","current","get","turnNumber","tests","timer2","dat","save","collectedData","getIndividualEntries","length","getGroupEntries","Component"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/SpreadSheetPanel/SpreadSheetPanel.js"],"sourcesContent":["import TestConsolePanel from '../TestConsolePanel/TestConsolePanel.js';\r\nimport React from 'react';\r\nimport { batchTurn, concludeAllTests, concludeAllTestsWhenDone, testSequence } from '../../tests/sequenceHelpers.js';\r\n\r\nimport unitTest from './tests/unitTest.js';\r\nimport appTest from './tests/appTest.js';\r\nimport { loadSheetAPI, saveAPI } from './helpers/API.js';\r\nimport { keyPressed, keyUpped } from './handlers/keyboardEvents/keyboardEvents.js';\r\n\r\nimport TablePanel from '../TablePanel/TablePanel.js'\r\nimport FormatPanel from '../FormatPanel/FormatPanel.js';\r\n\r\nimport './SpreadSheetPanel.css'\r\nimport CellViewPanel from '../CellViewPanel/CellViewPanel.js';\r\n\r\nlet loadedSheet = null; // our only global variable\r\n\r\nclass SpreadSheetPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sheetID: null, // get_URL_parameter(id)\r\n            autoSaveTimer: null,\r\n            title: 'Untitled'\r\n        }\r\n        this.setAutoSaveInterval = this.setAutoSaveInterval.bind(this);\r\n        this.hasSavePayload = this.hasSavePayload.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\" id=\"contentID\" style={{ height: parseInt(window.innerHeight, 10) - 66 + 'px', width: '100%' }}>\r\n                <TestConsolePanel />\r\n                <div id='spreadsheet' tabIndex='-1' onKeyDown={keyPressed} onKeyUp={keyUpped}>\r\n                    <FormatPanel />\r\n                    <CellViewPanel />\r\n                    <TablePanel rows={this.props.rows} cols={this.props.cols} rowHeight={this.props.rowHeight} colWidth={this.props.colWidth} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.storageURL != null) {\r\n            loadSheetAPI(this.state.sheetID, this.props.storageURL)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if (res.status == 'success') {\r\n                        let autoSaveInterval = this.setAutoSaveInterval();\r\n                        this.setState({\r\n                            autoSaveInterval: autoSaveInterval,\r\n                        })\r\n                        loadedSheet = res;\r\n                        document.querySelector('#back').removeAttribute('disabled');\r\n                        document.querySelector('#logout').removeAttribute('disabled');\r\n                    } else {\r\n                        if (res.status == 'fail') {\r\n                            if (res.reason == 'missing token') this.props.nav('/');\r\n                            if (res.reason == 'sheetID does not exist') this.props.nav('/sheets')\r\n                        }\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('Error: loadSheetAPI(): ' + err);\r\n                    clearInterval(this.state.autoSaveTimer);\r\n                    this.props.nav('/');\r\n                });\r\n        }\r\n        let timer = setInterval(() => {\r\n            if (batchTurn.current == testSequence.get('SpreadSheetPanel').turnNumber) {\r\n                unitTest(testSequence.get('SpreadSheetPanel').tests);\r\n                clearInterval(timer);\r\n            }\r\n\r\n        }, 500);\r\n        let timer2 = setInterval(() => {\r\n            if (batchTurn.current == testSequence.get('App').turnNumber) {\r\n                appTest(testSequence.get('App').tests);\r\n                clearInterval(timer2);\r\n            }\r\n        })\r\n        concludeAllTestsWhenDone();\r\n    }\r\n    shouldComponentUpdate() {\r\n        return false; // prevent re-renders from changes to Redux\r\n    }\r\n    setAutoSaveInterval() {\r\n        return setInterval(() => {\r\n            console.log('autoSave()');\r\n            if (this.hasSavePayload()) {\r\n                saveAPI(this.state.sheetID, this.props.storageURL)\r\n                    .then(res => {\r\n                        if (res.status == 'success') {\r\n                            console.log(res.dat);\r\n                            this.props.save();\r\n                        }\r\n                        else console.log('autoSave failed');\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('saveError: ' + err);\r\n                        clearInterval(this.state.autoSaveInterval);\r\n                    });\r\n            }\r\n        }, 3000);\r\n    }\r\n    hasSavePayload() {\r\n        return [...this.props.collectedData.getIndividualEntries()].length != 0 ||\r\n            [...this.props.collectedData.getGroupEntries()].length != 0;\r\n    }\r\n}\r\nexport default SpreadSheetPanel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}