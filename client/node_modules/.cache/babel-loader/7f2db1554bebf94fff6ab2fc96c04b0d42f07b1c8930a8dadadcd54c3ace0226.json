{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const selectionSlice = createSlice({\n  name: 'selection',\n  initialState: {\n    entries: new Set(['1,1']),\n    fontFamily: 'Calibri',\n    fontSize: '12px',\n    fontWeight: '300',\n    fontStyle: 'normal',\n    textDecoration: 'none',\n    fontColor: 'black',\n    cellColor: 'white',\n    borders: [],\n    horizontalAlignment: 'center',\n    verticalAlignment: 'center'\n  },\n  reducers: {\n    setSelection(state, action) {\n      state.entries = new Set([...action.payload.newEntries]);\n      state.fontFamily = action.payload.categories.fontFamily;\n      state.fontSize = action.payload.categories.fontSize;\n      state.fontWeight = action.payload.categories.fontWeight;\n      state.fontStyle = action.payload.categories.fontStyle;\n      state.textDecoration = action.payload.categories.textDecoration;\n      state.fontColor = action.payload.categories.fontColor;\n      state.cellColor = action.payload.categories.cellColor;\n      state.borders = action.payload.categories.borders;\n      state.horizontalAlignment = action.payload.categories.horizontalAlignment;\n      state.verticalAlignment = action.payload.categories.verticalAlignment;\n    },\n    setFontFamily(state, action) {\n      state.fontFamily = action.payload.fontFamily;\n    },\n    setFontSize(state, action) {\n      state.fontSize = action.payload.fontSize;\n    },\n    setFontWeight(state, action) {\n      state.fontWeight = action.payload.fontWeight;\n    },\n    setFontStyle(state, action) {\n      state.fontStyle = action.payload.fontStyle;\n    },\n    setTextDecoration(state, action) {\n      state.textDecoration = action.payload.textDecoration;\n    },\n    setFontColor(state, action) {\n      state.fontColor = action.payload.fontColor;\n    },\n    setCellColor(state, action) {\n      state.cellColor = action.payload.cellColor;\n    },\n    setBorders(state, action) {\n      state.borders = action.payload.borders;\n    },\n    setHorizontalAlignment(state, action) {\n      state.horizontalAlignment = action.payload.horizontalAlignment;\n    },\n    setVerticalAlignment(state, action) {\n      state.verticalAlignment = action.payload.verticalAlignment;\n    }\n  }\n});\nexport const {\n  setSelection,\n  setFontFamily,\n  setFontSize,\n  setFontWeight,\n  setFontStyle,\n  setTextDecoration,\n  setFontColor,\n  setCellColor,\n  setBorders,\n  setHorizontalAlignment,\n  setVerticalAlignment\n} = selectionSlice.actions;\nexport const getSelectionEntries = state => state.selection.entries;\nexport const getFontFamily = state => state.selection.fontFamily;\nexport const getFontSize = state => state.selection.fontSize;\nexport const getFontWeight = state => state.selection.fontWeight;\nexport const getFontStyle = state => state.selection.fontStyle;\nexport const getTextDecoration = state => state.selection.textDecoration;\nexport const getFontColor = state => state.selection.fontColor;\nexport const getCellColor = state => state.selection.cellColor;\nexport const getBorders = state => state.selection.borders;\nexport const getHorizontalAlignment = state => state.selection.horizontalAlignment;\nexport const getVerticalAlignment = state => state.selection.verticalAlignment;\nexport default selectionSlice.reducer;","map":{"version":3,"names":["createSlice","selectionSlice","name","initialState","entries","Set","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","fontColor","cellColor","borders","horizontalAlignment","verticalAlignment","reducers","setSelection","state","action","payload","newEntries","categories","setFontFamily","setFontSize","setFontWeight","setFontStyle","setTextDecoration","setFontColor","setCellColor","setBorders","setHorizontalAlignment","setVerticalAlignment","actions","getSelectionEntries","selection","getFontFamily","getFontSize","getFontWeight","getFontStyle","getTextDecoration","getFontColor","getCellColor","getBorders","getHorizontalAlignment","getVerticalAlignment","reducer"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/store/reducers/selectionSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const selectionSlice = createSlice({\r\n    name: 'selection',\r\n    initialState: {\r\n        entries: new Set(['1,1']),\r\n        fontFamily: 'Calibri',\r\n        fontSize: '12px',\r\n        fontWeight: '300',\r\n        fontStyle: 'normal',\r\n        textDecoration: 'none',\r\n        fontColor: 'black',\r\n        cellColor: 'white',\r\n        borders: [],\r\n        horizontalAlignment: 'center',\r\n        verticalAlignment: 'center',\r\n    },\r\n    reducers: {\r\n        setSelection(state, action) {\r\n            state.entries = new Set([...action.payload.newEntries]);\r\n            state.fontFamily = action.payload.categories.fontFamily;\r\n            state.fontSize = action.payload.categories.fontSize;\r\n            state.fontWeight = action.payload.categories.fontWeight;\r\n            state.fontStyle = action.payload.categories.fontStyle;\r\n            state.textDecoration = action.payload.categories.textDecoration;\r\n            state.fontColor = action.payload.categories.fontColor;\r\n            state.cellColor = action.payload.categories.cellColor;\r\n            state.borders = action.payload.categories.borders;\r\n            state.horizontalAlignment = action.payload.categories.horizontalAlignment;\r\n            state.verticalAlignment = action.payload.categories.verticalAlignment;\r\n        },\r\n        setFontFamily(state,action){\r\n            state.fontFamily = action.payload.fontFamily;\r\n        },\r\n        setFontSize(state,action){\r\n            state.fontSize = action.payload.fontSize;\r\n        },\r\n        setFontWeight(state,action){\r\n            state.fontWeight = action.payload.fontWeight;\r\n        },\r\n        setFontStyle(state,action){\r\n            state.fontStyle = action.payload.fontStyle;\r\n        },\r\n        setTextDecoration(state,action){\r\n            state.textDecoration = action.payload.textDecoration;\r\n        },\r\n        setFontColor(state,action){\r\n            state.fontColor = action.payload.fontColor;\r\n        },\r\n        setCellColor(state,action){\r\n            state.cellColor = action.payload.cellColor;\r\n        },\r\n        setBorders(state,action){\r\n            state.borders = action.payload.borders;\r\n        },\r\n        setHorizontalAlignment(state,action){\r\n            state.horizontalAlignment = action.payload.horizontalAlignment;\r\n        },\r\n        setVerticalAlignment(state,action){\r\n            state.verticalAlignment = action.payload.verticalAlignment;\r\n        },\r\n        \r\n    }\r\n})\r\n\r\nexport const { setSelection, setFontFamily, setFontSize, setFontWeight, setFontStyle, setTextDecoration, setFontColor, setCellColor, setBorders, setHorizontalAlignment, setVerticalAlignment } = selectionSlice.actions;\r\n\r\nexport const getSelectionEntries = state => state.selection.entries;\r\nexport const getFontFamily = state => state.selection.fontFamily;\r\nexport const getFontSize = state => state.selection.fontSize;\r\nexport const getFontWeight = state => state.selection.fontWeight;\r\nexport const getFontStyle = state => state.selection.fontStyle;\r\nexport const getTextDecoration = state => state.selection.textDecoration;\r\nexport const getFontColor = state => state.selection.fontColor;\r\nexport const getCellColor = state => state.selection.cellColor;\r\nexport const getBorders = state => state.selection.borders;\r\nexport const getHorizontalAlignment = state => state.selection.horizontalAlignment;\r\nexport const getVerticalAlignment = state => state.selection.verticalAlignment;\r\n\r\nexport default selectionSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}