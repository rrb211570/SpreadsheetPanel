{"ast":null,"code":"import { resizersTests } from '../handlers/resizingHandler/test.js';\nimport { selectionTest } from '../handlers/cellHandler/selectionHandler/test.js';\nimport { textChangeTest } from '../handlers/cellHandler/textChangeHandler/test.js';\nimport buildSheetTest from '../../TablePanel/helpers/buildSheet/test.js';\nimport { batchTurn, nextTurn, concludeTestingBatch } from './../../../tests/sequenceHelpers.js';\nconst t = {\n  BUILD_SHEET: 'BUILD_SHEET',\n  SELECTION: 'SELECTION',\n  TEXT_CHANGE: 'TEXT_CHANGE',\n  RESIZING: 'RESIZING'\n};\nfunction unitTest(testsToRun, loadedSheet, rows, cols, defaultCellHeight, defaultCellWidth) {\n  if (testsToRun.size == 0) {\n    nextTurn(batchTurn);\n    return;\n  }\n  let atomicTurn = {\n    current: 1,\n    nextAvailable: 1\n  };\n  for (const test of testsToRun.values()) {\n    switch (test) {\n      case t.BUILD_SHEET:\n        buildSheetTest(atomicTurn, loadedSheet, rows, cols, defaultCellHeight, defaultCellWidth);\n        break;\n      case t.SELECTION:\n        selectionTest(atomicTurn);\n        break;\n      case t.TEXT_CHANGE:\n        textChangeTest(atomicTurn);\n        break;\n      case t.RESIZING:\n        resizersTests(atomicTurn);\n        break;\n      default:\n        break;\n    }\n  }\n  concludeTestingBatch(atomicTurn);\n}\nexport default unitTest;","map":{"version":3,"names":["resizersTests","selectionTest","textChangeTest","buildSheetTest","batchTurn","nextTurn","concludeTestingBatch","t","BUILD_SHEET","SELECTION","TEXT_CHANGE","RESIZING","unitTest","testsToRun","loadedSheet","rows","cols","defaultCellHeight","defaultCellWidth","size","atomicTurn","current","nextAvailable","test","values"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/TablePanel/tests/unitTest.js"],"sourcesContent":["import { resizersTests } from '../handlers/resizingHandler/test.js'\r\nimport { selectionTest } from '../handlers/cellHandler/selectionHandler/test.js';\r\nimport { textChangeTest } from '../handlers/cellHandler/textChangeHandler/test.js';\r\nimport buildSheetTest from '../../TablePanel/helpers/buildSheet/test.js';\r\n\r\nimport { batchTurn, nextTurn, concludeTestingBatch } from './../../../tests/sequenceHelpers.js'\r\n\r\nconst t = {\r\n    BUILD_SHEET: 'BUILD_SHEET',\r\n    SELECTION: 'SELECTION',\r\n    TEXT_CHANGE: 'TEXT_CHANGE',\r\n    RESIZING: 'RESIZING'\r\n};\r\n\r\nfunction unitTest(testsToRun, loadedSheet, rows, cols, defaultCellHeight, defaultCellWidth) {\r\n    if (testsToRun.size == 0) {\r\n        nextTurn(batchTurn);\r\n        return;\r\n    }\r\n    let atomicTurn = {\r\n        current: 1,\r\n        nextAvailable: 1\r\n    };\r\n    for (const test of testsToRun.values()) {\r\n        switch (test) {\r\n            case t.BUILD_SHEET:\r\n                buildSheetTest(atomicTurn, loadedSheet, rows, cols, defaultCellHeight, defaultCellWidth);\r\n                break;\r\n            case t.SELECTION:\r\n                selectionTest(atomicTurn);\r\n                break;\r\n            case t.TEXT_CHANGE:\r\n                textChangeTest(atomicTurn);\r\n                break;\r\n            case t.RESIZING:\r\n                resizersTests(atomicTurn);\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n    concludeTestingBatch(atomicTurn);\r\n}\r\n\r\nexport default unitTest;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,qCAAqC;AACnE,SAASC,aAAa,QAAQ,kDAAkD;AAChF,SAASC,cAAc,QAAQ,mDAAmD;AAClF,OAAOC,cAAc,MAAM,6CAA6C;AAExE,SAASC,SAAS,EAAEC,QAAQ,EAAEC,oBAAoB,QAAQ,qCAAqC;AAE/F,MAAMC,CAAC,GAAG;EACNC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,WAAW;EACtBC,WAAW,EAAE,aAAa;EAC1BC,QAAQ,EAAE;AACd,CAAC;AAED,SAASC,QAAQ,CAACC,UAAU,EAAEC,WAAW,EAAEC,IAAI,EAAEC,IAAI,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAE;EACxF,IAAIL,UAAU,CAACM,IAAI,IAAI,CAAC,EAAE;IACtBd,QAAQ,CAACD,SAAS,CAAC;IACnB;EACJ;EACA,IAAIgB,UAAU,GAAG;IACbC,OAAO,EAAE,CAAC;IACVC,aAAa,EAAE;EACnB,CAAC;EACD,KAAK,MAAMC,IAAI,IAAIV,UAAU,CAACW,MAAM,EAAE,EAAE;IACpC,QAAQD,IAAI;MACR,KAAKhB,CAAC,CAACC,WAAW;QACdL,cAAc,CAACiB,UAAU,EAAEN,WAAW,EAAEC,IAAI,EAAEC,IAAI,EAAEC,iBAAiB,EAAEC,gBAAgB,CAAC;QACxF;MACJ,KAAKX,CAAC,CAACE,SAAS;QACZR,aAAa,CAACmB,UAAU,CAAC;QACzB;MACJ,KAAKb,CAAC,CAACG,WAAW;QACdR,cAAc,CAACkB,UAAU,CAAC;QAC1B;MACJ,KAAKb,CAAC,CAACI,QAAQ;QACXX,aAAa,CAACoB,UAAU,CAAC;QACzB;MACJ;QAAS;IAAM;EAEvB;EACAd,oBAAoB,CAACc,UAAU,CAAC;AACpC;AAEA,eAAeR,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}