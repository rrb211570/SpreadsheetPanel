{"ast":null,"code":"import { store } from './../../../../store/store.js';\nimport { trackEvent } from \"../../../../store/reducers/keyboardEventsSlice.js\";\nimport { undo, redo } from './../../../../data/modifiers/undoRedo.js';\nconst NO_COMMAND = 'No Command';\nconst CONTROL = 'Control';\nconst META = 'Meta';\nconst SHIFT = 'Shift';\nconst CONTROL_SHIFT = 'Control_Shift';\nconst NO_CHANGE = 'No Change';\n\n// Handle CTRL+Z/Y (undo/redo) and CTRL/SHIFT selections.\nfunction keyPressed(e) {\n  console.log(e.key.padStart(7, ' ') + ' DOWN');\n  let deleteThisVariable;\n  switch (store.getState().keyboardEvents.inputMode) {\n    case NO_COMMAND:\n      if (e.key === CONTROL || e.key === META) {\n        store.dispatch(trackEvent({\n          inputMode: CONTROL,\n          outcome: NO_CHANGE\n        }));\n      } else if (e.key === SHIFT) {\n        store.dispatch(trackEvent({\n          inputMode: SHIFT,\n          outcome: NO_CHANGE\n        }));\n      }\n      break;\n    case CONTROL:\n      if (e.key === 'z') undo();else if (e.key === 'y') redo();else if (e.key === 'x') deleteThisVariable = 0;else if (e.key === 'c') deleteThisVariable = 0;else if (e.key === 'v') deleteThisVariable = 0;\n      break;\n    case SHIFT:\n      break;\n    case CONTROL_SHIFT:\n      if (e.key === 'f') deleteThisVariable = 0; //formatPaint\n      break;\n    default:\n      break;\n  }\n}\nfunction keyUpped(e) {\n  console.log(e.key.padStart(7, ' ') + ' UP');\n  switch (store.getState().keyboardEvents.inputMode) {\n    case NO_COMMAND:\n      store.dispatch(trackEvent({\n        outcome: NO_CHANGE\n      }));\n      break;\n    case CONTROL:\n    case SHIFT:\n      if (e.key === CONTROL || e.key === META || e.key === SHIFT) {\n        store.dispatch(trackEvent({\n          inputMode: NO_COMMAND,\n          outcome: NO_CHANGE\n        }));\n      } else store.dispatch(trackEvent({\n        outcome: NO_CHANGE\n      }));\n      break;\n    default:\n      store.dispatch(trackEvent({\n        inputMode: NO_COMMAND,\n        outcome: NO_CHANGE\n      }));\n      break;\n  }\n}\nexport { keyPressed, keyUpped };","map":{"version":3,"names":["store","trackEvent","undo","redo","NO_COMMAND","CONTROL","META","SHIFT","CONTROL_SHIFT","NO_CHANGE","keyPressed","e","console","log","key","padStart","deleteThisVariable","getState","keyboardEvents","inputMode","dispatch","outcome","keyUpped"],"sources":["C:/Users/rband/Desktop/SpreadsheetPanel/client/src/components/SpreadSheetPanel/handlers/keyboardEvents/keyboardEvents.js"],"sourcesContent":["import { store } from './../../../../store/store.js'\r\nimport { trackEvent } from \"../../../../store/reducers/keyboardEventsSlice.js\";\r\nimport { undo, redo } from './../../../../data/modifiers/undoRedo.js'\r\n\r\nconst NO_COMMAND = 'No Command';\r\nconst CONTROL = 'Control';\r\nconst META = 'Meta'\r\nconst SHIFT = 'Shift';\r\nconst CONTROL_SHIFT = 'Control_Shift';\r\nconst NO_CHANGE = 'No Change';\r\n\r\n// Handle CTRL+Z/Y (undo/redo) and CTRL/SHIFT selections.\r\nfunction keyPressed(e) {\r\n    console.log(e.key.padStart(7, ' ') + ' DOWN');\r\n    let deleteThisVariable;\r\n    switch (store.getState().keyboardEvents.inputMode) {\r\n        case NO_COMMAND:\r\n            if (e.key === CONTROL || e.key === META) {\r\n                store.dispatch(trackEvent({ inputMode: CONTROL, outcome: NO_CHANGE }))\r\n            } else if (e.key === SHIFT) {\r\n                store.dispatch(trackEvent({ inputMode: SHIFT, outcome: NO_CHANGE }))\r\n            }\r\n            break;\r\n        case CONTROL:\r\n            if (e.key === 'z') undo();\r\n            else if (e.key === 'y') redo();\r\n            else if (e.key === 'x') deleteThisVariable = 0;\r\n            else if (e.key === 'c') deleteThisVariable = 0;\r\n            else if (e.key === 'v') deleteThisVariable = 0;\r\n            break;\r\n        case SHIFT:\r\n            break;\r\n        case CONTROL_SHIFT:\r\n            if (e.key === 'f') deleteThisVariable = 0; //formatPaint\r\n            break;\r\n        default: break;\r\n    }\r\n}\r\nfunction keyUpped(e) {\r\n    console.log(e.key.padStart(7, ' ') + ' UP');\r\n    switch (store.getState().keyboardEvents.inputMode) {\r\n        case NO_COMMAND:\r\n            store.dispatch(trackEvent({ outcome: NO_CHANGE }))\r\n            break;\r\n        case CONTROL:\r\n        case SHIFT:\r\n            if (e.key === CONTROL || e.key === META || e.key === SHIFT) {\r\n                store.dispatch(trackEvent({ inputMode: NO_COMMAND, outcome: NO_CHANGE }))\r\n            } else store.dispatch(trackEvent({ outcome: NO_CHANGE }))\r\n            break;\r\n        default:\r\n            store.dispatch(trackEvent({ inputMode: NO_COMMAND, outcome: NO_CHANGE }))\r\n            break;\r\n    }\r\n}\r\n\r\nexport { keyPressed, keyUpped };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}